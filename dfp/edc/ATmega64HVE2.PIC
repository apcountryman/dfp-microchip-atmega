<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<edc:PIC xmlns:atdf="http://crownking/atdf" xmlns:edc="http://crownking/edc" xmlns:ltx="http://crownking/ltx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://crownking/edc edc/PIC.xsd" edc:name="ATmega64HVE2" edc:arch="avr8" edc:procid="0x0000" atdf:architecture="AVR8" atdf:family="megaAVR" edc:hasFreeze="false">
  <edc:Properties>
    <edc:Property edc:propkey="file.registers.are.odd.address.accessible" edc:propvalue="true"/>
  </edc:Properties>
  <edc:Power>
    <edc:VDD edc:minvoltage="3.0" edc:maxvoltage="3.6" edc:nominalvoltage="3.300"/>
  </edc:Power>
  <edc:Programming edc:haslvp2="true" edc:haschecksum="false">
    <edc:ProgrammingRowSize edc:progop="pgm" edc:nzsize="128"/>
    <edc:ProgrammingRowSize edc:progop="cfg" edc:nzsize="1"/>
    <edc:ProgrammingRowSize edc:progop="eedata" edc:nzsize="4"/>
  </edc:Programming>
  <edc:ArchDef edc:name="avr8" edc:desc="avr8">
    <edc:MemTraits>
      <edc:ProgramMemTraits edc:addrinc="0x1" edc:locsize="0x2" edc:wordimpl="0xFFFF" edc:wordinit="0xFFFF" edc:wordsafe="0xFFFF" edc:wordsize="0xFFFF"/>
      <edc:DataMemTraits edc:addrinc="0x1" edc:locsize="0x1" edc:wordimpl="0xFF" edc:wordinit="0xFF" edc:wordsafe="0xFF" edc:wordsize="0x1"/>
      <edc:EEDataMemTraits edc:magicoffset="0x810000"/>
    </edc:MemTraits>
  </edc:ArchDef>
  <edc:InstructionSet edc:instructionsetid="avr8">
    <edc:InstructionSet edc:instructionsetid="avr8base"/>
    <edc:InstructionSet edc:instructionsetid="avr8brk"/>
    <edc:InstructionSet edc:instructionsetid="avr8movw"/>
    <edc:InstructionSet edc:instructionsetid="avr8lpm"/>
    <edc:InstructionSet edc:instructionsetid="avr8lpmx"/>
    <edc:InstructionSet edc:instructionsetid="avr8mega"/>
    <edc:InstructionSet edc:instructionsetid="avr8sram"/>
    <edc:InstructionSet edc:instructionsetid="avr8mul"/>
    <edc:InstructionSet edc:instructionsetid="avr8spm"/>
  </edc:InstructionSet>
  <edc:InterruptList>
    <edc:Interrupt edc:irq="0" edc:cname="RESET" edc:desc="External Pin, Power-on Reset, Brown-out Reset and Watchdog Reset"/>
    <edc:Interrupt edc:irq="1" edc:cname="INT0" edc:desc="External Interrupt 0"/>
    <edc:Interrupt edc:irq="2" edc:cname="PCINT0" edc:desc="Pin Change Interrupt 0"/>
    <edc:Interrupt edc:irq="3" edc:cname="PCINT1" edc:desc="Pin Change Interrupt 1"/>
    <edc:Interrupt edc:irq="4" edc:cname="WDT" edc:desc="Watchdog Timeout Interrupt"/>
    <edc:Interrupt edc:irq="5" edc:cname="WAKEUP" edc:desc="Wakeup Timer Overflow"/>
    <edc:Interrupt edc:irq="6" edc:cname="TIMER1_IC" edc:desc="Timer 1 Input capture"/>
    <edc:Interrupt edc:irq="7" edc:cname="TIMER1_COMPA" edc:desc="Timer 1 Compare Match A"/>
    <edc:Interrupt edc:irq="8" edc:cname="TIMER1_COMPB" edc:desc="Timer 1 Compare Match B"/>
    <edc:Interrupt edc:irq="9" edc:cname="TIMER1_OVF" edc:desc="Timer 1 overflow"/>
    <edc:Interrupt edc:irq="10" edc:cname="TIMER0_IC" edc:desc="Timer 0 Input Capture"/>
    <edc:Interrupt edc:irq="11" edc:cname="TIMER0_COMPA" edc:desc="Timer 0 Comapre Match A"/>
    <edc:Interrupt edc:irq="12" edc:cname="TIMER0_COMPB" edc:desc="Timer 0 Compare Match B"/>
    <edc:Interrupt edc:irq="13" edc:cname="TIMER0_OVF" edc:desc="Timer 0 Overflow"/>
    <edc:Interrupt edc:irq="14" edc:cname="LIN_STATUS" edc:desc="LIN Status Interrupt"/>
    <edc:Interrupt edc:irq="15" edc:cname="LIN_ERROR" edc:desc="LIN Error Interrupt"/>
    <edc:Interrupt edc:irq="16" edc:cname="SPI_STC" edc:desc="SPI Serial transfer complete"/>
    <edc:Interrupt edc:irq="17" edc:cname="VADC_CONV" edc:desc="Voltage ADC Instantaneous Conversion Complete"/>
    <edc:Interrupt edc:irq="18" edc:cname="VADC_ACC" edc:desc="Voltage ADC Accumulated Conversion Complete"/>
    <edc:Interrupt edc:irq="19" edc:cname="CADC_CONV" edc:desc="C-ADC Instantaneous Conversion Complete"/>
    <edc:Interrupt edc:irq="20" edc:cname="CADC_REG_CUR" edc:desc="C-ADC Regular Current"/>
    <edc:Interrupt edc:irq="21" edc:cname="CADC_ACC" edc:desc="C-ADC Accumulated Conversion Complete"/>
    <edc:Interrupt edc:irq="22" edc:cname="EE_READY" edc:desc="EEPROM Ready"/>
    <edc:Interrupt edc:irq="23" edc:cname="SPM" edc:desc="SPM Ready"/>
    <edc:Interrupt edc:irq="24" edc:cname="PLL" edc:desc="PLL Lock Change Interrupt"/>
  </edc:InterruptList>
  <edc:PeripheralList>
    <edc:Peripheral edc:cname="SPI" edc:desc="Serial Peripheral Interface"/>
    <edc:Peripheral edc:cname="EEPROM" edc:desc="EEPROM"/>
    <edc:Peripheral edc:cname="TC1" edc:desc="Timer/Counter, 16-bit"/>
    <edc:Peripheral edc:cname="TC0" edc:desc="Timer/Counter, 16-bit"/>
    <edc:Peripheral edc:cname="PORTB" edc:desc="I/O Port"/>
    <edc:Peripheral edc:cname="PORTA" edc:desc="I/O Port"/>
    <edc:Peripheral edc:cname="BOOT_LOAD" edc:desc="Bootloader"/>
    <edc:Peripheral edc:cname="ADC" edc:desc="Analog-to-Digital Converter"/>
    <edc:Peripheral edc:cname="BANDGAP" edc:desc="Bandgap"/>
    <edc:Peripheral edc:cname="LINUART" edc:desc="Local Interconnect Network"/>
    <edc:Peripheral edc:cname="CPU" edc:desc="CPU Registers"/>
    <edc:Peripheral edc:cname="EXINT" edc:desc="External Interrupts"/>
    <edc:Peripheral edc:cname="WDT" edc:desc="Watchdog Timer"/>
    <edc:Peripheral edc:cname="WAKEUP_TIMER" edc:desc="Wakeup Timer"/>
    <edc:Peripheral edc:cname="FUSE" edc:desc="Fuses"/>
    <edc:Peripheral edc:cname="LOCKBIT" edc:desc="Lockbits"/>
  </edc:PeripheralList>
  <edc:ProgramSpace>
    <edc:CodeSector edc:regionid="IFLASH" edc:beginaddr="0x0" edc:endaddr="0x8000" atdf:pagesize="0x80" edc:rw="rw"/>
    <edc:CodeSector edc:regionid="BOOT_SECTION_1" edc:beginaddr="0x7E00" edc:endaddr="0x8000" atdf:pagesize="0x80" edc:rw="rw"/>
    <edc:CodeSector edc:regionid="BOOT_SECTION_2" edc:beginaddr="0x7C00" edc:endaddr="0x8000" atdf:pagesize="0x80" edc:rw="rw"/>
    <edc:CodeSector edc:regionid="BOOT_SECTION_3" edc:beginaddr="0x7800" edc:endaddr="0x8000" atdf:pagesize="0x80" edc:rw="rw"/>
    <edc:CodeSector edc:regionid="BOOT_SECTION_4" edc:beginaddr="0x7000" edc:endaddr="0x8000" atdf:pagesize="0x80" edc:rw="rw"/>
  </edc:ProgramSpace>
  <edc:DataSpace edc:magicoffset="0x800000">
    <edc:RegardlessOfMode>
      <edc:NMMRPlace edc:regionid="corenmmrs">
        <edc:SFRDef edc:nzwidth="0x10" edc:cname="PC" edc:impl="0xFFFF" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:desc="Program Counter" edc:nmmrid="60"/>
      </edc:NMMRPlace>
      <edc:SFRDataSector edc:regionid="REGISTERS" edc:beginaddr="0x0" edc:endaddr="0x20">
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R0" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x0"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R1" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R2" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x2"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R3" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x3"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R4" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x4"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R5" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x5"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R6" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x6"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R7" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x7"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R8" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x8"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R9" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x9"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R10" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xA"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R11" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xB"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R12" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xC"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R13" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xD"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R14" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xE"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R15" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xF"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R16" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x10"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R17" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x11"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R18" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x12"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R19" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x13"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R20" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x14"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R21" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x15"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R22" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x16"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R23" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x17"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R24" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x18"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R25" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x19"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R26" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1A"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R27" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1B"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R28" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1C"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R29" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1D"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R30" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1E"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R31" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1F"/>
      </edc:SFRDataSector>
      <edc:SFRDataSector edc:regionid="MAPPED_IO" edc:beginaddr="0x20" edc:endaddr="0xF7">
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PINA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x20"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="DDRA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x21"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PORTA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x22"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PINB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x23"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="DDRB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x24"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PORTB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x25"/>
        <edc:AdjustPoint edc:offset="0xF" edc:_addr="0x26"/>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TIFR0" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0x35">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="TOV0" edc:nzwidth="0x1" edc:desc="Timer/Counter0 Overflow Flag"/>
              <edc:SFRFieldDef edc:cname="OCF0A" edc:nzwidth="0x1" edc:desc="Timer/Counter0 Output Compare Flag A"/>
              <edc:SFRFieldDef edc:cname="OCF0B" edc:nzwidth="0x1" edc:desc="Timer/Counter0 Output Compare Flag B"/>
              <edc:SFRFieldDef edc:cname="ICF0" edc:nzwidth="0x1" edc:desc="Timer/Counter 0 Input Capture Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TIFR1" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0x36">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="TOV1" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Overflow Flag"/>
              <edc:SFRFieldDef edc:cname="OCF1A" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output Compare Flag A"/>
              <edc:SFRFieldDef edc:cname="OCF1B" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output Compare Flag B"/>
              <edc:SFRFieldDef edc:cname="ICF1" edc:nzwidth="0x1" edc:desc="Timer/Counter 1 Input Capture Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x37"/>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="PCIFR" edc:nzwidth="0x8" edc:access="------nn" edc:impl="0x3" edc:_addr="0x3B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="PCIF" edc:nzwidth="0x2" edc:desc="Pin Change Interrupt Flags"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="EIFR" edc:nzwidth="0x8" edc:access="-------n" edc:impl="0x1" edc:_addr="0x3C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="INTF0" edc:nzwidth="0x1" edc:desc="External Interrupt Flag 0"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="EIMSK" edc:nzwidth="0x8" edc:access="-------n" edc:impl="0x1" edc:_addr="0x3D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="INT0" edc:nzwidth="0x1" edc:desc="External Interrupt Request 0 Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="GPIOR0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x3E"/>
        <edc:SFRDef ltx:memberofperipheral="EEPROM" edc:cname="EECR" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:impl="0x3F" edc:_addr="0x3F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EEPROM">
              <edc:SFRFieldDef edc:cname="EERE" edc:nzwidth="0x1" edc:desc="EEPROM Read Enable"/>
              <edc:SFRFieldDef edc:cname="EEPE" edc:nzwidth="0x1" edc:desc="EEPROM Write Enable"/>
              <edc:SFRFieldDef edc:cname="EEMPE" edc:nzwidth="0x1" edc:desc="EEPROM Master Write Enable"/>
              <edc:SFRFieldDef edc:cname="EERIE" edc:nzwidth="0x1" edc:desc="EEProm Ready Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="EEPM" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="ERASE_AND_WRITE_IN_ONE_OPERATION" edc:desc="Erase and Write in one operation" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ERASE_ONLY" edc:desc="Erase Only" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="WRITE_ONLY" edc:desc="Write Only" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EEPROM" edc:cname="EEDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x40"/>
        <edc:SFRDef ltx:memberofperipheral="EEPROM" edc:cname="EEAR" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x41"/>
        <edc:SFRDef ltx:memberofperipheral="TC1 TC0" edc:cname="GTCCR" edc:nzwidth="0x8" edc:access="n------n" edc:impl="0x81" edc:_addr="0x43">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="PSRSYNC" edc:nzwidth="0x1" edc:desc="Prescaler Reset"/>
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="TSM" edc:nzwidth="0x1" edc:desc="Timer/Counter Synchronization Mode"/>
            </edc:SFRMode>
            <edc:SFRMode edc:id="DS.1" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="PSRSYNC" edc:nzwidth="0x1" edc:desc="Prescaler Reset"/>
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="TSM" edc:nzwidth="0x1" edc:desc="Timer/Counter Synchronization Mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TCCR0A" edc:nzwidth="0x8" edc:access="nnnnn--n" edc:impl="0xF9" edc:_addr="0x44">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="WGM00" edc:nzwidth="0x1" edc:desc="Waveform Generation Mode"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="ICS0" edc:nzwidth="0x1" edc:desc="Input Capture Select"/>
              <edc:SFRFieldDef edc:cname="ICES0" edc:nzwidth="0x1" edc:desc="Input Capture Edge Select"/>
              <edc:SFRFieldDef edc:cname="ICNC0" edc:nzwidth="0x1" edc:desc="Input Capture Noise Canceler"/>
              <edc:SFRFieldDef edc:cname="ICEN0" edc:nzwidth="0x1" edc:desc="Input Capture Mode Enable"/>
              <edc:SFRFieldDef edc:cname="TCW0" edc:nzwidth="0x1" edc:desc="Timer/Counter Width"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TCCR0B" edc:nzwidth="0x8" edc:access="-----nnn" edc:impl="0x7" edc:_addr="0x45">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="CS00" edc:nzwidth="0x1" edc:desc="Clock Select0 bit 0">
                <edc:SFRFieldSemantic edc:cname="NO_CLOCK_SOURCE_STOPPED" edc:desc="No Clock Source (Stopped)" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_NO_PRESCALING" edc:desc="Running, No Prescaling" edc:when="(field &amp; 0x1) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_8" edc:desc="Running, CLK/8" edc:when="(field &amp; 0x1) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_64" edc:desc="Running, CLK/64" edc:when="(field &amp; 0x1) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_256" edc:desc="Running, CLK/256" edc:when="(field &amp; 0x1) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_1024" edc:desc="Running, CLK/1024" edc:when="(field &amp; 0x1) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_EXTCLK_TN_FALLING_EDGE" edc:desc="Running, ExtClk Tn Falling Edge" edc:when="(field &amp; 0x1) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_EXTCLK_TN_RISING_EDGE" edc:desc="Running, ExtClk Tn Rising Edge" edc:when="(field &amp; 0x1) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CS01" edc:nzwidth="0x1" edc:desc="Clock Select0 bit 1"/>
              <edc:SFRFieldDef edc:cname="CS02" edc:nzwidth="0x1" edc:desc="Clock Select0 bit 2"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TCNT0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x46"/>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="OCR0A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x48"/>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="OCR0B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x49"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="GPIOR1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x4A"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="GPIOR2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x4B"/>
        <edc:SFRDef ltx:memberofperipheral="SPI" edc:cname="SPCR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x4C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI">
              <edc:SFRFieldDef edc:cname="SPR" edc:nzwidth="0x2" edc:desc="SPI Clock Rate Selects">
                <edc:SFRFieldSemantic edc:cname="FOSC_4" edc:desc="fosc/4" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_16" edc:desc="fosc/16" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_64" edc:desc="fosc/64" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_128" edc:desc="fosc/128" edc:when="(field &amp; 0x3) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_2" edc:desc="fosc/2" edc:when="(field &amp; 0x3) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_8" edc:desc="fosc/8" edc:when="(field &amp; 0x3) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_32" edc:desc="fosc/32" edc:when="(field &amp; 0x3) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_64" edc:desc="fosc/64" edc:when="(field &amp; 0x3) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
              <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock polarity"/>
              <edc:SFRFieldDef edc:cname="MSTR" edc:nzwidth="0x1" edc:desc="Master/Slave Select"/>
              <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order"/>
              <edc:SFRFieldDef edc:cname="SPE" edc:nzwidth="0x1" edc:desc="SPI Enable"/>
              <edc:SFRFieldDef edc:cname="SPIE" edc:nzwidth="0x1" edc:desc="SPI Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI" edc:cname="SPSR" edc:nzwidth="0x8" edc:access="nn-----n" edc:impl="0xC1" edc:_addr="0x4D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI">
              <edc:SFRFieldDef edc:cname="SPI2X" edc:nzwidth="0x1" edc:desc="Double SPI Speed Bit"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="WCOL" edc:nzwidth="0x1" edc:desc="Write Collision Flag"/>
              <edc:SFRFieldDef edc:cname="SPIF" edc:nzwidth="0x1" edc:desc="SPI Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI" edc:cname="SPDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x4E"/>
        <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x4F"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SMCR" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0x53">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="SE" edc:nzwidth="0x1" edc:desc="Sleep Enable"/>
              <edc:SFRFieldDef edc:cname="SM" edc:nzwidth="0x3" edc:desc="Sleep Mode Select bits">
                <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Idle" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ADC" edc:desc="ADC" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PDOWN" edc:desc="Power Down" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PSAVE" edc:desc="Power Save" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x04" edc:desc="Reserved" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x05" edc:desc="Reserved" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="STDBY" edc:desc="Standby" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="ESTDBY" edc:desc="Extended Standby" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="MCUSR" edc:nzwidth="0x8" edc:access="---nnnnn" edc:impl="0x1F" edc:_addr="0x54">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="PORF" edc:nzwidth="0x1" edc:desc="Power-on reset flag"/>
              <edc:SFRFieldDef edc:cname="EXTRF" edc:nzwidth="0x1" edc:desc="External Reset Flag"/>
              <edc:SFRFieldDef edc:cname="BODRF" edc:nzwidth="0x1" edc:desc="Brown-out Reset Flag"/>
              <edc:SFRFieldDef edc:cname="WDRF" edc:nzwidth="0x1" edc:desc="Watchdog Reset Flag"/>
              <edc:SFRFieldDef edc:cname="OCDRF" edc:nzwidth="0x1" edc:desc="OCD Reset Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="MCUCR" edc:nzwidth="0x8" edc:access="--nn--nn" edc:impl="0x33" edc:_addr="0x55">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="IVCE" edc:nzwidth="0x1" edc:desc="Interrupt Vector Change Enable"/>
              <edc:SFRFieldDef edc:cname="IVSEL" edc:nzwidth="0x1" edc:desc="Interrupt Vector Select"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PUD" edc:nzwidth="0x1" edc:desc="Pull-up disable"/>
              <edc:SFRFieldDef edc:cname="CKOE" edc:nzwidth="0x1" edc:desc="Clock Output Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x56"/>
        <edc:SFRDef ltx:memberofperipheral="BOOT_LOAD" edc:cname="SPMCSR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x57">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOOT_LOAD">
              <edc:SFRFieldDef edc:cname="SPMEN" edc:nzwidth="0x1" edc:desc="Store Program Memory Enable"/>
              <edc:SFRFieldDef edc:cname="PGERS" edc:nzwidth="0x1" edc:desc="Page Erase"/>
              <edc:SFRFieldDef edc:cname="PGWRT" edc:nzwidth="0x1" edc:desc="Page Write"/>
              <edc:SFRFieldDef edc:cname="LBSET" edc:nzwidth="0x1" edc:desc="Lock Bit Set"/>
              <edc:SFRFieldDef edc:cname="RWWSRE" edc:nzwidth="0x1" edc:desc="Read-While-Write Section Read Enable"/>
              <edc:SFRFieldDef edc:cname="SIGRD" edc:nzwidth="0x1" edc:desc="Signature Row Read"/>
              <edc:SFRFieldDef edc:cname="RWWSB" edc:nzwidth="0x1" edc:desc="Read-While-Write Section Busy"/>
              <edc:SFRFieldDef edc:cname="SPMIE" edc:nzwidth="0x1" edc:desc="SPM Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x58"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x5D"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SREG" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x5F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="C" edc:nzwidth="0x1" edc:desc="Carry Flag"/>
              <edc:SFRFieldDef edc:cname="Z" edc:nzwidth="0x1" edc:desc="Zero Flag"/>
              <edc:SFRFieldDef edc:cname="N" edc:nzwidth="0x1" edc:desc="Negative Flag"/>
              <edc:SFRFieldDef edc:cname="V" edc:nzwidth="0x1" edc:desc="Two's Complement Overflow Flag"/>
              <edc:SFRFieldDef edc:cname="S" edc:nzwidth="0x1" edc:desc="Sign Bit"/>
              <edc:SFRFieldDef edc:cname="H" edc:nzwidth="0x1" edc:desc="Half Carry Flag"/>
              <edc:SFRFieldDef edc:cname="T" edc:nzwidth="0x1" edc:desc="Bit Copy Storage"/>
              <edc:SFRFieldDef edc:cname="I" edc:nzwidth="0x1" edc:desc="Global Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="WDTCSR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x60">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
              <edc:SFRFieldDef edc:cname="WDP" edc:nzwidth="0x6" edc:mask="0x27" edc:desc="Watchdog Timer Prescaler Bits">
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_2K" edc:desc="Oscillator Cycles 2K" edc:when="(field &amp; 0x27) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_4K" edc:desc="Oscillator Cycles 4K" edc:when="(field &amp; 0x27) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_8K" edc:desc="Oscillator Cycles 8K" edc:when="(field &amp; 0x27) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_16K" edc:desc="Oscillator Cycles 16K" edc:when="(field &amp; 0x27) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_32K" edc:desc="Oscillator Cycles 32K" edc:when="(field &amp; 0x27) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_64K" edc:desc="Oscillator Cycles 64K" edc:when="(field &amp; 0x27) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_128K" edc:desc="Oscillator Cycles 128K" edc:when="(field &amp; 0x27) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_256K" edc:desc="Oscillator Cycles 256K" edc:when="(field &amp; 0x27) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_512K" edc:desc="Oscillator Cycles 512K" edc:when="(field &amp; 0x27) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_1024K" edc:desc="Oscillator Cycles 1024K" edc:when="(field &amp; 0x27) == 0x09"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="-3"/>
              <edc:SFRFieldDef edc:cname="WDE" edc:nzwidth="0x1" edc:desc="Watch Dog Enable"/>
              <edc:SFRFieldDef edc:cname="WDCE" edc:nzwidth="0x1" edc:desc="Watchdog Change Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="WDIE" edc:nzwidth="0x1" edc:desc="Watchdog Timeout Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="WDIF" edc:nzwidth="0x1" edc:desc="Watchdog Timeout Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="CLKPR" edc:nzwidth="0x8" edc:access="n-----nn" edc:impl="0x83" edc:_addr="0x61">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="CLKPS" edc:nzwidth="0x2" edc:desc="Clock Prescaler Select Bits"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="CLKPCE" edc:nzwidth="0x1" edc:desc="Clock Prescaler Change Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="WAKEUP_TIMER" edc:cname="WUTCSR" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:impl="0xDF" edc:_addr="0x62">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WAKEUP_TIMER">
              <edc:SFRFieldDef edc:cname="WUTP" edc:nzwidth="0x3" edc:desc="Wake-up Timer Prescaler Bits"/>
              <edc:SFRFieldDef edc:cname="WUTE" edc:nzwidth="0x1" edc:desc="Wake-up Timer Enable"/>
              <edc:SFRFieldDef edc:cname="WUTR" edc:nzwidth="0x1" edc:desc="Wake-up Timer Reset"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="WUTIE" edc:nzwidth="0x1" edc:desc="Wake-up Timer Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="WUTIF" edc:nzwidth="0x1" edc:desc="Wake-up Timer Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="WDTCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:impl="0x7" edc:_addr="0x63">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
              <edc:SFRFieldDef edc:cname="WDCLE" edc:nzwidth="0x1" edc:desc="Watchdog Timer Comfiguration Lock Enable"/>
              <edc:SFRFieldDef edc:cname="WDCL" edc:nzwidth="0x2" edc:desc="Watchdog Timer Comfiguration Lock bits"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="PRR0" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0x64">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="PRTIM0" edc:nzwidth="0x1" edc:desc="Power Reduction Timer/Counter0"/>
              <edc:SFRFieldDef edc:cname="PRTIM1" edc:nzwidth="0x1" edc:desc="Power Reduction Timer/Counter1"/>
              <edc:SFRFieldDef edc:cname="PRSPI" edc:nzwidth="0x1" edc:desc="Power reduction SPI"/>
              <edc:SFRFieldDef edc:cname="PRLIN" edc:nzwidth="0x1" edc:desc="Power Reduction LIN UART Interface"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x65"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SOSCCALA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x66"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SOSCCALB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x67"/>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="PCICR" edc:nzwidth="0x8" edc:access="------nn" edc:impl="0x3" edc:_addr="0x68">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="PCIE" edc:nzwidth="0x2" edc:desc="Pin Change Interrupt Enables"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="EICRA" edc:nzwidth="0x8" edc:access="------nn" edc:impl="0x3" edc:_addr="0x69">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="ISC00" edc:nzwidth="0x1" edc:desc="External Interrupt Sense Control 0 Bit 0">
                <edc:SFRFieldSemantic edc:cname="LOW_LEVEL_OF_INTX" edc:desc="Low Level of INTX" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ANY_LOGICAL_CHANGE_OF_INTX" edc:desc="Any Logical Change of INTX" edc:when="(field &amp; 0x1) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING_EDGE_OF_INTX" edc:desc="Falling Edge of INTX" edc:when="(field &amp; 0x1) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RISING_EDGE_OF_INTX" edc:desc="Rising Edge of INTX" edc:when="(field &amp; 0x1) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ISC01" edc:nzwidth="0x1" edc:desc="External Interrupt Sense Control 0 Bit 1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x6A"/>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="PCMSK0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x6B"/>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="PCMSK1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x6C"/>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x6D"/>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TIMSK0" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0x6E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="TOIE0" edc:nzwidth="0x1" edc:desc="Timer/Counter0 Overflow Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="OCIE0A" edc:nzwidth="0x1" edc:desc="Timer/Counter0 Output Compare A Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="OCIE0B" edc:nzwidth="0x1" edc:desc="Timer/Counter0 Output Compare B Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="ICIE0" edc:nzwidth="0x1" edc:desc="Timer/Counter n Input Capture Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TIMSK1" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0x6F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="TOIE1" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Overflow Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="OCIE1A" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output Compare A Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="OCIE1B" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output Compare B Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="ICIE1" edc:nzwidth="0x1" edc:desc="Timer/Counter n Input Capture Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xE" edc:_addr="0x70"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="DIDR0" edc:nzwidth="0x8" edc:access="------nn" edc:impl="0x3" edc:_addr="0x7E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="PA0DID" edc:nzwidth="0x1" edc:desc="When this bit is written logic one, the digital input buffer of the corresponding V_ADC pin is disabled."/>
              <edc:SFRFieldDef edc:cname="PA1DID" edc:nzwidth="0x1" edc:desc="When this bit is written logic one, the digital input buffer of the corresponding V_ADC pin is disabled."/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x7F"/>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TCCR1A" edc:nzwidth="0x8" edc:access="nnnnn--n" edc:impl="0xF9" edc:_addr="0x80">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="WGM10" edc:nzwidth="0x1" edc:desc="Waveform Generation Mode"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="ICS1" edc:nzwidth="0x1" edc:desc="Input Capture Select"/>
              <edc:SFRFieldDef edc:cname="ICES1" edc:nzwidth="0x1" edc:desc="Input Capture Edge Select"/>
              <edc:SFRFieldDef edc:cname="ICNC1" edc:nzwidth="0x1" edc:desc="Input Capture Noise Canceler"/>
              <edc:SFRFieldDef edc:cname="ICEN1" edc:nzwidth="0x1" edc:desc="Input Capture Mode Enable"/>
              <edc:SFRFieldDef edc:cname="TCW1" edc:nzwidth="0x1" edc:desc="Timer/Counter Width"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TCCR1B" edc:nzwidth="0x8" edc:access="-----nnn" edc:impl="0x7" edc:_addr="0x81">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="CS" edc:nzwidth="0x3" edc:desc="Clock Select1 bis">
                <edc:SFRFieldSemantic edc:cname="NO_CLOCK_SOURCE_STOPPED" edc:desc="No Clock Source (Stopped)" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_NO_PRESCALING" edc:desc="Running, No Prescaling" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_8" edc:desc="Running, CLK/8" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_64" edc:desc="Running, CLK/64" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_256" edc:desc="Running, CLK/256" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_1024" edc:desc="Running, CLK/1024" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_EXTCLK_TN_FALLING_EDGE" edc:desc="Running, ExtClk Tn Falling Edge" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_EXTCLK_TN_RISING_EDGE" edc:desc="Running, ExtClk Tn Rising Edge" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x82"/>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TCNT1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x84"/>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x86"/>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="OCR1A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x88"/>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="OCR1B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x89"/>
        <edc:AdjustPoint edc:offset="0x36" edc:_addr="0x8A"/>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINCR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LCMD" edc:nzwidth="0x3" edc:desc="LIN Command and Mode bits"/>
              <edc:SFRFieldDef edc:cname="LENA" edc:nzwidth="0x1" edc:desc="LIN or UART Enable"/>
              <edc:SFRFieldDef edc:cname="LCONF" edc:nzwidth="0x2" edc:desc="LIN Configuration bits"/>
              <edc:SFRFieldDef edc:cname="LIN13" edc:nzwidth="0x1" edc:desc="LIN Standard"/>
              <edc:SFRFieldDef edc:cname="LSWRES" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINSIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LRXOK" edc:nzwidth="0x1" edc:desc="Receive Performed Interrupt"/>
              <edc:SFRFieldDef edc:cname="LTXOK" edc:nzwidth="0x1" edc:desc="Transmit Performed Interrupt"/>
              <edc:SFRFieldDef edc:cname="LIDOK" edc:nzwidth="0x1" edc:desc="Identifier Interrupt"/>
              <edc:SFRFieldDef edc:cname="LERR" edc:nzwidth="0x1" edc:desc="Error Interrupt"/>
              <edc:SFRFieldDef edc:cname="LBUSY" edc:nzwidth="0x1" edc:desc="Busy Signal"/>
              <edc:SFRFieldDef edc:cname="LIDST" edc:nzwidth="0x3" edc:desc="Identifier Status bits"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINENIR" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0xC2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LENRXOK" edc:nzwidth="0x1" edc:desc="Enable Receive Performed Interrupt"/>
              <edc:SFRFieldDef edc:cname="LENTXOK" edc:nzwidth="0x1" edc:desc="Enable Transmit Performed Interrupt"/>
              <edc:SFRFieldDef edc:cname="LENIDOK" edc:nzwidth="0x1" edc:desc="Enable Identifier Interrupt"/>
              <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Enable Error Interrupt"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINERR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xC3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LBERR" edc:nzwidth="0x1" edc:desc="Bit Error Flag"/>
              <edc:SFRFieldDef edc:cname="LCERR" edc:nzwidth="0x1" edc:desc="Checksum Error Flag"/>
              <edc:SFRFieldDef edc:cname="LPERR" edc:nzwidth="0x1" edc:desc="Parity Error Flag"/>
              <edc:SFRFieldDef edc:cname="LSERR" edc:nzwidth="0x1" edc:desc="Synchronization Error Flag"/>
              <edc:SFRFieldDef edc:cname="LFERR" edc:nzwidth="0x1" edc:desc="Framing Error Flag"/>
              <edc:SFRFieldDef edc:cname="LOVERR" edc:nzwidth="0x1" edc:desc="Overrun Error Flag"/>
              <edc:SFRFieldDef edc:cname="LTOERR" edc:nzwidth="0x1" edc:desc="Frame Time Out Error Flag"/>
              <edc:SFRFieldDef edc:cname="LABORT" edc:nzwidth="0x1" edc:desc="Abort Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINBTR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:impl="0xBF" edc:_addr="0xC4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LBT" edc:nzwidth="0x6" edc:desc="LIN Bit Timing bits"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="LDISR" edc:nzwidth="0x1" edc:desc="Disable Bit Timing Resynchronization"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINBRRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xC5">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LDIV" edc:nzwidth="0x8"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINBRRH" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0xC6">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LDIV" edc:nzwidth="0x4"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINDLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xC7">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LRXDL" edc:nzwidth="0x4" edc:desc="LIN Receive Data Length bits"/>
              <edc:SFRFieldDef edc:cname="LTXDL" edc:nzwidth="0x4" edc:desc="LIN Transmit Data Length bits"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINIDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xC8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LID" edc:nzwidth="0x6" edc:desc="Identifier bit 5 or Data Length bits"/>
              <edc:SFRFieldDef edc:cname="LP" edc:nzwidth="0x2" edc:desc="Parity bits"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINSEL" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0xC9">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LINDX" edc:nzwidth="0x3" edc:desc="FIFO LIN Data Buffer Index bits"/>
              <edc:SFRFieldDef edc:cname="LAINC" edc:nzwidth="0x1" edc:desc="Auto Increment of Data Buffer Index (Active Low)"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="LINUART" edc:cname="LINDAT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xCA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="LINUART">
              <edc:SFRFieldDef edc:cname="LDATA" edc:nzwidth="0x8"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x6" edc:_addr="0xCB"/>
        <edc:SFRDef ltx:memberofperipheral="BANDGAP" edc:cname="BGCSRA" edc:nzwidth="0x8" edc:access="-----nnn" edc:impl="0x7" edc:_addr="0xD1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BANDGAP">
              <edc:SFRFieldDef edc:cname="BGSC" edc:nzwidth="0x3" edc:desc="Band Gap Sample Configuration"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BANDGAP" edc:cname="BGCRB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xD2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BANDGAP">
              <edc:SFRFieldDef edc:cname="BGCL" edc:nzwidth="0x8" edc:desc="Band Gap Calibration Linear"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BANDGAP" edc:cname="BGCRA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xD3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BANDGAP">
              <edc:SFRFieldDef edc:cname="BGCN" edc:nzwidth="0x8" edc:desc="Band Gap Calibration Nominal"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BANDGAP" edc:cname="BGLR" edc:nzwidth="0x8" edc:access="------nn" edc:impl="0x3" edc:_addr="0xD4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BANDGAP">
              <edc:SFRFieldDef edc:cname="BGPL" edc:nzwidth="0x1" edc:desc="Band Gap Lock"/>
              <edc:SFRFieldDef edc:cname="BGPLE" edc:nzwidth="0x1" edc:desc="Band Gap Lock Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3" edc:_addr="0xD5"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="PLLCSR" edc:nzwidth="0x8" edc:access="--nn--nn" edc:impl="0x33" edc:_addr="0xD8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="PLLCIE" edc:nzwidth="0x1" edc:desc="PLL Lock Change Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="PLLCIF" edc:nzwidth="0x1" edc:desc="PLL Lock Change Interrupt Flag"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="LOCK" edc:nzwidth="0x1" edc:desc="PLL Lock"/>
              <edc:SFRFieldDef edc:cname="SWEN" edc:nzwidth="0x1" edc:desc="PLL Software Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3" edc:_addr="0xD9"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PBOV" edc:nzwidth="0x8" edc:access="n---n--n" edc:impl="0x89" edc:_addr="0xDC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORTB">
              <edc:SFRFieldDef edc:cname="PBOE0" edc:nzwidth="0x1" edc:desc="Port B Override Enable 0"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PBOE3" edc:nzwidth="0x1" edc:desc="Port B Override Enable 3"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="PBOVCE" edc:nzwidth="0x1" edc:desc="Port B Override Change Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x3" edc:_addr="0xDD"/>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADSCSRA" edc:nzwidth="0x8" edc:access="-----nnn" edc:impl="0x7" edc:_addr="0xE0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="SCMD" edc:nzwidth="0x2" edc:desc="Synchronization Command">
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RESET_AND_SYNCHRONIZE" edc:desc="Reset and Synchronize" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="SYNCHRONIZE_ON_NEXT_INSTANTANEOUS_CONVERSION" edc:desc="Synchronize on next Instantaneous Conversion" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="SYNCHRONIZE_ON_NEXT_ACCUMULATED_CONVERSION" edc:desc="Synchronize on next Accumulated Conversion" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SBSY" edc:nzwidth="0x1" edc:desc="Synchronization Busy"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADSCSRB" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:impl="0x77" edc:_addr="0xE1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="CADICRB" edc:nzwidth="0x1" edc:desc="CADIC Data Read Out Busy"/>
              <edc:SFRFieldDef edc:cname="CADACRB" edc:nzwidth="0x1" edc:desc="CADAC Data Read Out Busy"/>
              <edc:SFRFieldDef edc:cname="CADICPS" edc:nzwidth="0x1" edc:desc="C-ADC Instantaneous Conversion Polarity Status"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="VADICRB" edc:nzwidth="0x1" edc:desc="VADIC Data Read Out Busy"/>
              <edc:SFRFieldDef edc:cname="VADACRB" edc:nzwidth="0x1" edc:desc="VADAC Data Read Out Busy"/>
              <edc:SFRFieldDef edc:cname="VADICPS" edc:nzwidth="0x1" edc:desc="V-ADC Instantaneous Conversion Polarity Status"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADCRA" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0xE2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="CKSEL" edc:nzwidth="0x1" edc:desc="Sampling Clock Select">
                <edc:SFRFieldSemantic edc:cname="PLL_512KHZ_OUTPUT_AS_SAMPLING_CLOCK" edc:desc="PLL (512kHz output) as sampling clock" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="SLOW_RC_OSCILLATOR_AS_SAMPLING_CLOCK" edc:desc="Slow RC Oscillator as sampling clock" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ADCMS" edc:nzwidth="0x2" edc:desc="C-ADC Chopper Mode Select">
                <edc:SFRFieldSemantic edc:cname="CHOPPING_DISABLED" edc:desc="Chopping Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="AUTOMATIC_FAST_CHOPPING" edc:desc="Automatic Fast Chopping" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="AUTOMATIC_SLOW_CHOPPING" edc:desc="Automatic Slow Chopping" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="SOFTWARE_POLARITY_CONTROL" edc:desc="Software Polarity Control" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ADPSEL" edc:nzwidth="0x1" edc:desc="ADC Polarity Select"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADCRB" edc:nzwidth="0x8" edc:access="---nnnnn" edc:impl="0x1F" edc:_addr="0xE3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="ADADES" edc:nzwidth="0x3" edc:desc="Accumulated Decimation Ratio Select">
                <edc:SFRFieldSemantic edc:cname="512" edc:desc="512" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="256" edc:desc="256" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="128" edc:desc="128" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="64" edc:desc="64" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="32" edc:desc="32" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="16" edc:desc="16" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="8" edc:desc="8" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="4" edc:desc="4" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ADIDES" edc:nzwidth="0x2" edc:desc="Instantaneous Decimation Ratio Select">
                <edc:SFRFieldSemantic edc:cname="512" edc:desc="512" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="256" edc:desc="256" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="128" edc:desc="128" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="64" edc:desc="64" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADCRC" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:impl="0xBF" edc:_addr="0xE4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="CADRCT" edc:nzwidth="0x4" edc:desc="C-ADC Regular Current Count Threshold">
                <edc:SFRFieldSemantic edc:cname="1" edc:desc="1" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2" edc:desc="2" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="3" edc:desc="3" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="4" edc:desc="4" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="5" edc:desc="5" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="6" edc:desc="6" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="7" edc:desc="7" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="8" edc:desc="8" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="9" edc:desc="9" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="10" edc:desc="10" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="11" edc:desc="11" edc:when="(field &amp; 0xF) == 0x0a"/>
                <edc:SFRFieldSemantic edc:cname="12" edc:desc="12" edc:when="(field &amp; 0xF) == 0x0b"/>
                <edc:SFRFieldSemantic edc:cname="13" edc:desc="13" edc:when="(field &amp; 0xF) == 0x0c"/>
                <edc:SFRFieldSemantic edc:cname="14" edc:desc="14" edc:when="(field &amp; 0xF) == 0x0d"/>
                <edc:SFRFieldSemantic edc:cname="15" edc:desc="15" edc:when="(field &amp; 0xF) == 0x0e"/>
                <edc:SFRFieldSemantic edc:cname="16" edc:desc="16" edc:when="(field &amp; 0xF) == 0x0f"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CADRCM" edc:nzwidth="0x2" edc:desc="C-ADC Regular Current Comparator Mode">
                <edc:SFRFieldSemantic edc:cname="COMPARATOR_DISABLED" edc:desc="Comparator Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="COMPARATOR_ENABLED_REGULAR_CURRENT_COUNTER_COUNTS_UP_IF_ACCUMULATED_CURRENT_IS_ABOVE_THRESHOLD_AND_IS_RESET_IF_ACCUMULATED_CURRENT_IS_BELOW_THRESHOLD" edc:desc="Comparator Enabled. Regular Current Counter counts up if Accumulated Current is above threshold and is reset if Accumulated Current is below threshold." edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="COMPARATOR_ENABLED_REGULAR_CURRENT_COUNTER_COUNTS_UP_IF_ACCUMULATED_CURRENT_IS_ABOVE_THRESHOLD_AND_DOWN_IF_ACCUMULATED_CURRENT_IS_BELOW_THRESHOLD" edc:desc="Comparator Enabled. Regular Current Counter counts up if Accumulated Current is above threshold and down if Accumulated Current is below threshold." edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CADEN" edc:nzwidth="0x1" edc:desc="C-ADC Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADCRD" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:impl="0x3F" edc:_addr="0xE5">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="CADDSEL" edc:nzwidth="0x1" edc:desc="C-ADC Diagnostics Channel Select"/>
              <edc:SFRFieldDef edc:cname="CADPDM" edc:nzwidth="0x2" edc:desc="C-ADC Pin Diagnostics Mode">
                <edc:SFRFieldSemantic edc:cname="NO_CURRENT_SOURCE_IS_ENABLED" edc:desc="No current source is enabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CURRENT_SOURCE_ON_PI_PIN_ENABLED" edc:desc="Current source on PI pin enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CURRENT_SOURCE_ON_NI_PIN_ENABLED" edc:desc="Current source on NI pin enabled" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CURRENT_SOURCE_ON_BOTH_PI_NI_PINS_ENABLED" edc:desc="Current source on both PI/NI pins enabled" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CADG" edc:nzwidth="0x3" edc:desc="C-ADC Gain">
                <edc:SFRFieldSemantic edc:cname="4X" edc:desc="4x" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="8X" edc:desc="8x" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="16X" edc:desc="16x" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="32X" edc:desc="32x" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="64X" edc:desc="64x" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="128X" edc:desc="128x" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="256X" edc:desc="256x" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADCRE" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:impl="0xBF" edc:_addr="0xE6">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="VADMUX" edc:nzwidth="0x3" edc:desc="V-ADC Channel Select">
                <edc:SFRFieldSemantic edc:cname="PV_NV" edc:desc="PV - NV" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ADC0_SGND" edc:desc="ADC0 - SGND" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ADC1_SGND" edc:desc="ADC1 - SGND" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VTEMP_GND" edc:desc="VTEMP - GND" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="DIAGNOSIS_GND_VREF_TBD" edc:desc="DIAGNOSIS - GND (VREF/TBD)" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="VADPDM" edc:nzwidth="0x2" edc:desc="V-ADC Pin Diagnostics Mode">
                <edc:SFRFieldSemantic edc:cname="NO_CURRENT_SOURCE_IS_ENABLED" edc:desc="No current source is enabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="CURRENT_SOURCE_ON_PV_PIN_ENABLED" edc:desc="Current source on PV pin enabled" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="CURRENT_SOURCE_ON_NV_PIN_ENABLED" edc:desc="Current source on NV pin enabled" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="CURRENT_SOURCE_ON_BOTH_PV_NV_PINS_ENABLED" edc:desc="Current source on both PV/NV pins enabled" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="VADREFS" edc:nzwidth="0x1" edc:desc="V-ADC Reference Select">
                <edc:SFRFieldSemantic edc:cname="VREF_AS_REFERENCE" edc:desc="VREF as reference" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="AVDD_3_AS_REFERENCE_FOR_DIAGNOSIS_PURPOSE" edc:desc="AVDD/3 as reference (for diagnosis purpose)" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="VADEN" edc:nzwidth="0x1" edc:desc="V-ADC Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADIFR" edc:nzwidth="0x8" edc:access="--nn-nnn" edc:impl="0x37" edc:_addr="0xE7">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="CADICIF" edc:nzwidth="0x1" edc:desc="C-ADC Instantaneous Current Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="CADACIF" edc:nzwidth="0x1" edc:desc="C-ADC Accumulated Current Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="CADRCIF" edc:nzwidth="0x1" edc:desc="C-ADC Regulator Current Interrupt Flag"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="VADICIF" edc:nzwidth="0x1" edc:desc="V-DAC Instantaneous Voltage Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="VADACIF" edc:nzwidth="0x1" edc:desc="V-ADC Accumulated Voltage Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADIMR" edc:nzwidth="0x8" edc:access="--nn-nnn" edc:impl="0x37" edc:_addr="0xE8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="CADICIE" edc:nzwidth="0x1" edc:desc="C-ADC Instantaneous Current Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="CADACIE" edc:nzwidth="0x1" edc:desc="C-ADC Accumulated Current Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="CADRCIE" edc:nzwidth="0x1" edc:desc="C-ADC Regulator Current Interrupt Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="VADICIE" edc:nzwidth="0x1" edc:desc="V-DAC Instantaneous Voltage Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="VADACIE" edc:nzwidth="0x1" edc:desc="V-ADC Accumulated Voltage Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="CADRCL" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xE9"/>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="CADIC" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xEB"/>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="CADAC0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xED"/>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="CADAC1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xEE"/>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="CADAC2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xEF"/>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="CADAC3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xF0"/>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="VADIC" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xF1"/>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="VADAC0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xF3"/>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="VADAC1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xF4"/>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="VADAC2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xF5"/>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="VADAC3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xF6"/>
      </edc:SFRDataSector>
      <edc:GPRDataSector edc:regionid="IRAM" edc:beginaddr="0x100" edc:endaddr="0x1100"/>
    </edc:RegardlessOfMode>
  </edc:DataSpace>
  <edc:DataFlashSpace edc:endaddr="0x400" edc:magicoffset="0x810000"/>
  <edc:SignaturesSpace edc:magicoffset="0x840000">
    <edc:DeviceIDSector edc:regionid="SIGNATURES" edc:beginaddr="0x0" edc:endaddr="0x3" edc:value="0x1E9610" edc:rw="r"/>
  </edc:SignaturesSpace>
  <edc:FusesSpace edc:magicoffset="0x820000">
    <edc:ConfigFuseSector edc:regionid="FUSES" edc:beginaddr="0x0" edc:endaddr="0x2" edc:magicoffset="0x820000" edc:rw="rw">
      <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="LOW" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xD7" edc:access="nnnnnnnn" edc:_addr="0x0">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
            <edc:DCRFieldDef edc:cname="OSCSEL0" edc:nzwidth="0x1" edc:desc="Oscillator select">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="SUT" edc:nzwidth="0x2" edc:desc="Select start-up time">
              <edc:DCRFieldSemantic edc:cname="14CK_0MS" edc:desc="Start-up time 14 CK + 0 ms" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="14CK_16MS" edc:desc="Start-up time 14 CK + 16 ms" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="14CK_32MS" edc:desc="Start-up time 14 CK + 32 ms" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="14CK_64MS" edc:desc="Start-up time 14 CK + 64 ms" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="CKDIV8" edc:nzwidth="0x1" edc:desc="Divide clock by 8">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BODEN" edc:nzwidth="0x1" edc:desc="Brown-out detection enabled">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="SPIEN" edc:nzwidth="0x1" edc:desc="Serial program downloading (SPI) enabled">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="EESAVE" edc:nzwidth="0x1" edc:desc="Preserve EEPROM through the Chip Erase cycle">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WDTON" edc:nzwidth="0x1" edc:desc="Watch-dog Timer always on">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="HIGH" edc:nzwidth="0x8" edc:impl="0xF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xF9" edc:access="----nnnn" edc:_addr="0x1">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
            <edc:DCRFieldDef edc:cname="BOOTRST" edc:nzwidth="0x1" edc:desc="Boot Reset vector Enabled">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BOOTSZ" edc:nzwidth="0x2" edc:desc="Select Boot Size">
              <edc:DCRFieldSemantic edc:cname="512W_7E00" edc:desc="Boot Flash size=512 words Boot address=$7E00" edc:when="(field &amp; 0x3) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="1024W_7C00" edc:desc="Boot Flash size=1024 words Boot address=$7C00" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="2048W_7800" edc:desc="Boot Flash size=2048 words Boot address=$7800" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="4096W_7000" edc:desc="Boot Flash size=4096 words Boot address=$7000" edc:when="(field &amp; 0x3) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="DWEN" edc:nzwidth="0x1" edc:desc="Debug Wire enable">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
    </edc:ConfigFuseSector>
  </edc:FusesSpace>
  <edc:LockbitsSpace edc:magicoffset="0x830000">
    <edc:ConfigFuseSector edc:regionid="LOCKBITS" edc:beginaddr="0x0" edc:endaddr="0x1" edc:magicoffset="0x830000" edc:rw="rw">
      <edc:DCRDef ltx:memberofperipheral="LOCKBIT" edc:cname="LOCKBIT" edc:nzwidth="0x8" edc:impl="0x3F" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xFF" edc:access="--nnnnnn" edc:_addr="0x0">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="LOCKBIT">
            <edc:DCRFieldDef edc:cname="LB" edc:nzwidth="0x2" edc:desc="Memory Lock">
              <edc:DCRFieldSemantic edc:cname="PROG_VER_DISABLED" edc:desc="Further programming and verification disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="PROG_DISABLED" edc:desc="Further programming disabled" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="NO_LOCK" edc:desc="No memory lock features enabled" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BLB0" edc:nzwidth="0x2" edc:desc="Boot Loader Protection Mode">
              <edc:DCRFieldSemantic edc:cname="LPM_SPM_DISABLE" edc:desc="LPM and SPM prohibited in Application Section" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="LPM_DISABLE" edc:desc="LPM prohibited in Application Section" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="SPM_DISABLE" edc:desc="SPM prohibited in Application Section" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="NO_LOCK" edc:desc="No lock on SPM and LPM in Application Section" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BLB1" edc:nzwidth="0x2" edc:desc="Boot Loader Protection Mode">
              <edc:DCRFieldSemantic edc:cname="LPM_SPM_DISABLE" edc:desc="LPM and SPM prohibited in Boot Section" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="LPM_DISABLE" edc:desc="LPM prohibited in Boot Section" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="SPM_DISABLE" edc:desc="SPM prohibited in Boot Section" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="NO_LOCK" edc:desc="No lock on SPM and LPM in Boot Section" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
    </edc:ConfigFuseSector>
  </edc:LockbitsSpace>
</edc:PIC>
