<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<edc:PIC xmlns:atdf="http://crownking/atdf" xmlns:edc="http://crownking/edc" xmlns:ltx="http://crownking/ltx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://crownking/edc edc/PIC.xsd" edc:name="ATmega406" edc:arch="avr8" edc:procid="0x0000" atdf:architecture="AVR8" atdf:family="megaAVR" edc:hasFreeze="false">
  <edc:Properties>
    <edc:Property edc:propkey="file.registers.are.odd.address.accessible" edc:propvalue="true"/>
  </edc:Properties>
  <edc:Power>
    <edc:VDD edc:minvoltage="4.0" edc:maxvoltage="5.5" edc:nominalvoltage="5.000"/>
  </edc:Power>
  <edc:Programming edc:haslvp2="true" edc:haschecksum="false">
    <edc:ProgrammingRowSize edc:progop="pgm" edc:nzsize="128"/>
    <edc:ProgrammingRowSize edc:progop="cfg" edc:nzsize="1"/>
    <edc:ProgrammingRowSize edc:progop="eedata" edc:nzsize="4"/>
  </edc:Programming>
  <edc:ArchDef edc:name="avr8" edc:desc="avr8">
    <edc:MemTraits>
      <edc:ProgramMemTraits edc:addrinc="0x1" edc:locsize="0x2" edc:wordimpl="0xFFFF" edc:wordinit="0xFFFF" edc:wordsafe="0xFFFF" edc:wordsize="0xFFFF"/>
      <edc:DataMemTraits edc:addrinc="0x1" edc:locsize="0x1" edc:wordimpl="0xFF" edc:wordinit="0xFF" edc:wordsafe="0xFF" edc:wordsize="0x1"/>
      <edc:EEDataMemTraits edc:magicoffset="0x810000"/>
    </edc:MemTraits>
  </edc:ArchDef>
  <edc:InstructionSet edc:instructionsetid="avr8">
    <edc:InstructionSet edc:instructionsetid="avr8base"/>
    <edc:InstructionSet edc:instructionsetid="avr8brk"/>
    <edc:InstructionSet edc:instructionsetid="avr8movw"/>
    <edc:InstructionSet edc:instructionsetid="avr8lpm"/>
    <edc:InstructionSet edc:instructionsetid="avr8lpmx"/>
    <edc:InstructionSet edc:instructionsetid="avr8mega"/>
    <edc:InstructionSet edc:instructionsetid="avr8sram"/>
    <edc:InstructionSet edc:instructionsetid="avr8mul"/>
    <edc:InstructionSet edc:instructionsetid="avr8spm"/>
  </edc:InstructionSet>
  <edc:InterruptList>
    <edc:Interrupt edc:irq="0" edc:cname="RESET" edc:desc="External Pin, Power-on Reset, Brown-out Reset and Watchdog Reset"/>
    <edc:Interrupt edc:irq="1" edc:cname="BPINT" edc:desc="Battery Protection Interrupt"/>
    <edc:Interrupt edc:irq="2" edc:cname="INT0" edc:desc="External Interrupt Request 0"/>
    <edc:Interrupt edc:irq="3" edc:cname="INT1" edc:desc="External Interrupt Request 1"/>
    <edc:Interrupt edc:irq="4" edc:cname="INT2" edc:desc="External Interrupt Request 2"/>
    <edc:Interrupt edc:irq="5" edc:cname="INT3" edc:desc="External Interrupt Request 3"/>
    <edc:Interrupt edc:irq="6" edc:cname="PCINT0" edc:desc="Pin Change Interrupt 0"/>
    <edc:Interrupt edc:irq="7" edc:cname="PCINT1" edc:desc="Pin Change Interrupt 1"/>
    <edc:Interrupt edc:irq="8" edc:cname="WDT" edc:desc="Watchdog Timeout Interrupt"/>
    <edc:Interrupt edc:irq="9" edc:cname="WAKE_UP" edc:desc="Wakeup timer overflow"/>
    <edc:Interrupt edc:irq="10" edc:cname="TIM1_COMP" edc:desc="Timer/Counter 1 Compare Match"/>
    <edc:Interrupt edc:irq="11" edc:cname="TIM1_OVF" edc:desc="Timer/Counter 1 Overflow"/>
    <edc:Interrupt edc:irq="12" edc:cname="TIM0_COMPA" edc:desc="Timer/Counter0 Compare A Match"/>
    <edc:Interrupt edc:irq="13" edc:cname="TIM0_COMPB" edc:desc="Timer/Counter0 Compare B Match"/>
    <edc:Interrupt edc:irq="14" edc:cname="TIM0_OVF" edc:desc="Timer/Counter0 Overflow"/>
    <edc:Interrupt edc:irq="15" edc:cname="TWI_BUS_CD" edc:desc="Two-Wire Bus Connect/Disconnect"/>
    <edc:Interrupt edc:irq="16" edc:cname="TWI" edc:desc="Two-Wire Serial Interface"/>
    <edc:Interrupt edc:irq="17" edc:cname="VADC" edc:desc="Voltage ADC Conversion Complete"/>
    <edc:Interrupt edc:irq="18" edc:cname="CCADC_CONV" edc:desc="Coulomb Counter ADC Conversion Complete"/>
    <edc:Interrupt edc:irq="19" edc:cname="CCADC_REG_CUR" edc:desc="Coloumb Counter ADC Regular Current"/>
    <edc:Interrupt edc:irq="20" edc:cname="CCADC_ACC" edc:desc="Coloumb Counter ADC Accumulator"/>
    <edc:Interrupt edc:irq="21" edc:cname="EE_READY" edc:desc="EEPROM Ready"/>
    <edc:Interrupt edc:irq="22" edc:cname="SPM_READY" edc:desc="Store Program Memory Ready"/>
  </edc:InterruptList>
  <edc:PeripheralList>
    <edc:Peripheral edc:cname="ADC" edc:desc="Analog-to-Digital Converter"/>
    <edc:Peripheral edc:cname="EXINT" edc:desc="External Interrupts"/>
    <edc:Peripheral edc:cname="TC1" edc:desc="Timer/Counter, 16-bit"/>
    <edc:Peripheral edc:cname="WAKEUP_TIMER" edc:desc="Wakeup Timer"/>
    <edc:Peripheral edc:cname="BATTERY_PROTECTION" edc:desc="Battery Protection"/>
    <edc:Peripheral edc:cname="FET" edc:desc="FET Control"/>
    <edc:Peripheral edc:cname="COULOMB_COUNTER" edc:desc="Coulomb Counter"/>
    <edc:Peripheral edc:cname="CELL_BALANCING" edc:desc="Cell Balancing"/>
    <edc:Peripheral edc:cname="CPU" edc:desc="CPU Registers"/>
    <edc:Peripheral edc:cname="WDT" edc:desc="Watchdog Timer"/>
    <edc:Peripheral edc:cname="TC0" edc:desc="Timer/Counter, 8-bit"/>
    <edc:Peripheral edc:cname="PORTA" edc:desc="I/O Port"/>
    <edc:Peripheral edc:cname="PORTB" edc:desc="I/O Port"/>
    <edc:Peripheral edc:cname="PORTC" edc:desc="I/O Port"/>
    <edc:Peripheral edc:cname="PORTD" edc:desc="I/O Port"/>
    <edc:Peripheral edc:cname="BOOT_LOAD" edc:desc="Bootloader"/>
    <edc:Peripheral edc:cname="TWI" edc:desc="Two Wire Serial Interface"/>
    <edc:Peripheral edc:cname="BANDGAP" edc:desc="Bandgap"/>
    <edc:Peripheral edc:cname="EEPROM" edc:desc="EEPROM"/>
    <edc:Peripheral edc:cname="FUSE" edc:desc="Fuses"/>
    <edc:Peripheral edc:cname="LOCKBIT" edc:desc="Lockbits"/>
  </edc:PeripheralList>
  <edc:ProgramSpace>
    <edc:CodeSector edc:regionid="IFLASH" edc:beginaddr="0x0" edc:endaddr="0x5000" atdf:pagesize="0x80" edc:rw="rw"/>
    <edc:CodeSector edc:regionid="BOOT_SECTION_1" edc:beginaddr="0x4F00" edc:endaddr="0x5000" atdf:pagesize="0x80" edc:rw="rw"/>
    <edc:CodeSector edc:regionid="BOOT_SECTION_2" edc:beginaddr="0x4E00" edc:endaddr="0x5000" atdf:pagesize="0x80" edc:rw="rw"/>
    <edc:CodeSector edc:regionid="BOOT_SECTION_3" edc:beginaddr="0x4C00" edc:endaddr="0x5000" atdf:pagesize="0x80" edc:rw="rw"/>
    <edc:CodeSector edc:regionid="BOOT_SECTION_4" edc:beginaddr="0x4800" edc:endaddr="0x5000" atdf:pagesize="0x80" edc:rw="rw"/>
  </edc:ProgramSpace>
  <edc:DataSpace edc:magicoffset="0x800000">
    <edc:RegardlessOfMode>
      <edc:NMMRPlace edc:regionid="corenmmrs">
        <edc:SFRDef edc:nzwidth="0x10" edc:cname="PC" edc:impl="0xFFFF" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:desc="Program Counter" edc:nmmrid="60"/>
      </edc:NMMRPlace>
      <edc:SFRDataSector edc:regionid="REGISTERS" edc:beginaddr="0x0" edc:endaddr="0x20">
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R0" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x0"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R1" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R2" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x2"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R3" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x3"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R4" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x4"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R5" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x5"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R6" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x6"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R7" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x7"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R8" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x8"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R9" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x9"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R10" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xA"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R11" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xB"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R12" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xC"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R13" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xD"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R14" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xE"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R15" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xF"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R16" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x10"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R17" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x11"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R18" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x12"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R19" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x13"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R20" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x14"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R21" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x15"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R22" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x16"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R23" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x17"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R24" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x18"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R25" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x19"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R26" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1A"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R27" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1B"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R28" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1C"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R29" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1D"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R30" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1E"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R31" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1F"/>
      </edc:SFRDataSector>
      <edc:SFRDataSector edc:regionid="MAPPED_IO" edc:beginaddr="0x20" edc:endaddr="0xF9">
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PINA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x20"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="DDRA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x21"/>
        <edc:SFRDef ltx:memberofperipheral="PORTA" edc:cname="PORTA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x22"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PINB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x23"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="DDRB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x24"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PORTB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x25"/>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x26"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PORTC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x28"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PIND" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x29"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="DDRD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x2A"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PORTD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x2B"/>
        <edc:AdjustPoint edc:offset="0x9" edc:_addr="0x2C"/>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TIFR0" edc:nzwidth="0x8" edc:access="-----nnn" edc:impl="0x7" edc:_addr="0x35">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="TOV0" edc:nzwidth="0x1" edc:desc="Overflow Flag"/>
              <edc:SFRFieldDef edc:cname="OCF0A" edc:nzwidth="0x1" edc:desc="Output Compare Flag"/>
              <edc:SFRFieldDef edc:cname="OCF0B" edc:nzwidth="0x1" edc:desc="Output Compare Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TIFR1" edc:nzwidth="0x8" edc:access="------nn" edc:impl="0x3" edc:_addr="0x36">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="TOV1" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Overflow Flag"/>
              <edc:SFRFieldDef edc:cname="OCF1A" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output Compare Flag A"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x37"/>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="PCIFR" edc:nzwidth="0x8" edc:access="------nn" edc:impl="0x3" edc:_addr="0x3B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="PCIF" edc:nzwidth="0x2" edc:desc="Pin Change Interrupt Flags"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="EIFR" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0x3C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="INTF" edc:nzwidth="0x4" edc:desc="External Interrupt Flags"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="EIMSK" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0x3D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x4" edc:desc="External Interrupt Request 1 Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="GPIOR0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x3E"/>
        <edc:SFRDef ltx:memberofperipheral="EEPROM" edc:cname="EECR" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:impl="0x3F" edc:_addr="0x3F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EEPROM">
              <edc:SFRFieldDef edc:cname="EERE" edc:nzwidth="0x1" edc:desc="EEPROM Read Enable"/>
              <edc:SFRFieldDef edc:cname="EEPE" edc:nzwidth="0x1" edc:desc="EEPROM Programming Enable"/>
              <edc:SFRFieldDef edc:cname="EEMPE" edc:nzwidth="0x1" edc:desc="EEPROM Master Programming Enable"/>
              <edc:SFRFieldDef edc:cname="EERIE" edc:nzwidth="0x1" edc:desc="EEPROM Ready Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="EEPM" edc:nzwidth="0x2" edc:desc="EEPROM Programming Mode Bits">
                <edc:SFRFieldSemantic edc:cname="ERASE_AND_WRITE_IN_ONE_OPERATION" edc:desc="Erase and Write in one operation" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ERASE_ONLY" edc:desc="Erase Only" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="WRITE_ONLY" edc:desc="Write Only" edc:when="(field &amp; 0x3) == 0x02"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EEPROM" edc:cname="EEDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x40"/>
        <edc:SFRDef ltx:memberofperipheral="EEPROM" edc:cname="EEAR" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x41"/>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="GTCCR" edc:nzwidth="0x8" edc:access="n------n" edc:impl="0x81" edc:_addr="0x43">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="PSRSYNC" edc:nzwidth="0x1" edc:desc="Prescaler Reset"/>
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="TSM" edc:nzwidth="0x1" edc:desc="Timer/Counter Synchronization Mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TCCR0A" edc:nzwidth="0x8" edc:access="nnnn--nn" edc:impl="0xF3" edc:_addr="0x44">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="WGM0" edc:nzwidth="0x2" edc:desc="Clock Select0 bits"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="COM0B" edc:nzwidth="0x2"/>
              <edc:SFRFieldDef edc:cname="COM0A" edc:nzwidth="0x2" edc:desc="Force Output Compare"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TCCR0B" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:impl="0xCF" edc:_addr="0x45">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="CS0" edc:nzwidth="0x3" edc:desc="Clock Select0 bits">
                <edc:SFRFieldSemantic edc:cname="NO_CLOCK_SOURCE_STOPPED" edc:desc="No Clock Source (Stopped)" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_NO_PRESCALING" edc:desc="Running, No Prescaling" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_8" edc:desc="Running, CLK/8" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_64" edc:desc="Running, CLK/64" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_256" edc:desc="Running, CLK/256" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_1024" edc:desc="Running, CLK/1024" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_EXTCLK_TN_FALLING_EDGE" edc:desc="Running, ExtClk Tn Falling Edge" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_EXTCLK_TN_RISING_EDGE" edc:desc="Running, ExtClk Tn Rising Edge" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="WGM02" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="FOC0B" edc:nzwidth="0x1" edc:desc="Waveform Generation Mode"/>
              <edc:SFRFieldDef edc:cname="FOC0A" edc:nzwidth="0x1" edc:desc="Force Output Compare"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TCNT0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x46"/>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="OCR0A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x47">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="OCR0A" edc:nzwidth="0x8"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="OCR0B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x48">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="OCR0B" edc:nzwidth="0x8"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x49"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="GPIOR1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x4A"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="GPIOR2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x4B"/>
        <edc:AdjustPoint edc:offset="0x7" edc:_addr="0x4C"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SMCR" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0x53">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="SE" edc:nzwidth="0x1" edc:desc="Sleep Enable"/>
              <edc:SFRFieldDef edc:cname="SM" edc:nzwidth="0x3" edc:desc="Sleep Mode Select bits">
                <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Idle" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ADC" edc:desc="ADC Noise Reduction (If Available)" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PDOWN" edc:desc="Power Down" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="PSAVE" edc:desc="Power Save" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="POFF" edc:desc="Power Off" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x05" edc:desc="Reserved" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x06" edc:desc="Reserved" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x07" edc:desc="Reserved" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="MCUSR" edc:nzwidth="0x8" edc:access="---nnnnn" edc:impl="0x1F" edc:_addr="0x54">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="PORF" edc:nzwidth="0x1" edc:desc="Power-on reset flag"/>
              <edc:SFRFieldDef edc:cname="EXTRF" edc:nzwidth="0x1" edc:desc="External Reset Flag"/>
              <edc:SFRFieldDef edc:cname="BODRF" edc:nzwidth="0x1" edc:desc="Brown-out Reset Flag"/>
              <edc:SFRFieldDef edc:cname="WDRF" edc:nzwidth="0x1" edc:desc="Watchdog Reset Flag"/>
              <edc:SFRFieldDef edc:cname="JTRF" edc:nzwidth="0x1" edc:desc="JTAG Reset Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="MCUCR" edc:nzwidth="0x8" edc:access="n--n--nn" edc:impl="0x93" edc:_addr="0x55">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="IVCE" edc:nzwidth="0x1" edc:desc="Interrupt Vector Change Enable"/>
              <edc:SFRFieldDef edc:cname="IVSEL" edc:nzwidth="0x1" edc:desc="Interrupt Vector Select"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PUD" edc:nzwidth="0x1" edc:desc="Pull-up disable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="JTD" edc:nzwidth="0x1" edc:desc="JTAG Disable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x56"/>
        <edc:SFRDef ltx:memberofperipheral="BOOT_LOAD" edc:cname="SPMCSR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x57">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOOT_LOAD">
              <edc:SFRFieldDef edc:cname="SPMEN" edc:nzwidth="0x1" edc:desc="Store Program Memory Enable"/>
              <edc:SFRFieldDef edc:cname="PGERS" edc:nzwidth="0x1" edc:desc="Page Erase"/>
              <edc:SFRFieldDef edc:cname="PGWRT" edc:nzwidth="0x1" edc:desc="Page Write"/>
              <edc:SFRFieldDef edc:cname="BLBSET" edc:nzwidth="0x1" edc:desc="Boot Lock Bit Set"/>
              <edc:SFRFieldDef edc:cname="RWWSRE" edc:nzwidth="0x1" edc:desc="Read While Write section read enable"/>
              <edc:SFRFieldDef edc:cname="SIGRD" edc:nzwidth="0x1" edc:desc="Signature Row Read"/>
              <edc:SFRFieldDef edc:cname="RWWSB" edc:nzwidth="0x1" edc:desc="Read While Write Section Busy"/>
              <edc:SFRFieldDef edc:cname="SPMIE" edc:nzwidth="0x1" edc:desc="SPM Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x58"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x5D"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SREG" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x5F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="C" edc:nzwidth="0x1" edc:desc="Carry Flag"/>
              <edc:SFRFieldDef edc:cname="Z" edc:nzwidth="0x1" edc:desc="Zero Flag"/>
              <edc:SFRFieldDef edc:cname="N" edc:nzwidth="0x1" edc:desc="Negative Flag"/>
              <edc:SFRFieldDef edc:cname="V" edc:nzwidth="0x1" edc:desc="Two's Complement Overflow Flag"/>
              <edc:SFRFieldDef edc:cname="S" edc:nzwidth="0x1" edc:desc="Sign Bit"/>
              <edc:SFRFieldDef edc:cname="H" edc:nzwidth="0x1" edc:desc="Half Carry Flag"/>
              <edc:SFRFieldDef edc:cname="T" edc:nzwidth="0x1" edc:desc="Bit Copy Storage"/>
              <edc:SFRFieldDef edc:cname="I" edc:nzwidth="0x1" edc:desc="Global Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="WDTCSR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x60">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
              <edc:SFRFieldDef edc:cname="WDP" edc:nzwidth="0x6" edc:mask="0x27" edc:desc="Watchdog Timer Prescaler Bits">
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_2K" edc:desc="Oscillator Cycles 2K" edc:when="(field &amp; 0x27) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_4K" edc:desc="Oscillator Cycles 4K" edc:when="(field &amp; 0x27) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_8K" edc:desc="Oscillator Cycles 8K" edc:when="(field &amp; 0x27) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_16K" edc:desc="Oscillator Cycles 16K" edc:when="(field &amp; 0x27) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_32K" edc:desc="Oscillator Cycles 32K" edc:when="(field &amp; 0x27) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_64K" edc:desc="Oscillator Cycles 64K" edc:when="(field &amp; 0x27) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_128K" edc:desc="Oscillator Cycles 128K" edc:when="(field &amp; 0x27) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_256K" edc:desc="Oscillator Cycles 256K" edc:when="(field &amp; 0x27) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_512K" edc:desc="Oscillator Cycles 512K" edc:when="(field &amp; 0x27) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_1024K" edc:desc="Oscillator Cycles 1024K" edc:when="(field &amp; 0x27) == 0x09"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="-3"/>
              <edc:SFRFieldDef edc:cname="WDE" edc:nzwidth="0x1" edc:desc="Watch Dog Enable"/>
              <edc:SFRFieldDef edc:cname="WDCE" edc:nzwidth="0x1" edc:desc="Watchdog Change Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="WDIE" edc:nzwidth="0x1" edc:desc="Watchdog Timeout Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="WDIF" edc:nzwidth="0x1" edc:desc="Watchdog Timeout Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x61"/>
        <edc:SFRDef ltx:memberofperipheral="WAKEUP_TIMER" edc:cname="WUTCSR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x62">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WAKEUP_TIMER">
              <edc:SFRFieldDef edc:cname="WUTP" edc:nzwidth="0x3" edc:desc="Wake-up Timer Prescaler Bits">
                <edc:SFRFieldSemantic edc:cname="4K_SLOW_RC_1K_32KHZ" edc:desc="4K(Slow RC) / 1K (32kHz)" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="8K_SLOW_RC_2K_32KHZ" edc:desc="8K(Slow RC) / 2K (32kHz)" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="16K_SLOW_RC_4K_32KHZ" edc:desc="16K(Slow RC) / 4K (32kHz)" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="32K_SLOW_RC_8K_32KHZ" edc:desc="32K(Slow RC) / 8K (32kHz)" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="64K_SLOW_RC_16K_32KHZ" edc:desc="64K(Slow RC) / 16K (32kHz)" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="128K_SLOW_RC_32K_32KHZ" edc:desc="128K(Slow RC) / 32K (32kHz)" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="256K_SLOW_RC_64K_32KHZ" edc:desc="256K(Slow RC) / 64K (32kHz)" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="512K_SLOW_RC_128K_32KHZ" edc:desc="512K(Slow RC) / 128K (32kHz)" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="WUTE" edc:nzwidth="0x1" edc:desc="Wake-up Timer Enable"/>
              <edc:SFRFieldDef edc:cname="WUTR" edc:nzwidth="0x1" edc:desc="Wake-up Timer Reset"/>
              <edc:SFRFieldDef edc:cname="WUTCF" edc:nzwidth="0x1" edc:desc="Wake-up timer Calibration Flag"/>
              <edc:SFRFieldDef edc:cname="WUTIE" edc:nzwidth="0x1" edc:desc="Wake-up Timer Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="WUTIF" edc:nzwidth="0x1" edc:desc="Wake-up Timer Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x63"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="PRR0" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0x64">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="PRVADC" edc:nzwidth="0x1" edc:desc="Power Reduction V-ADC"/>
              <edc:SFRFieldDef edc:cname="PRTIM0" edc:nzwidth="0x1" edc:desc="Power Reduction Timer/Counter0"/>
              <edc:SFRFieldDef edc:cname="PRTIM1" edc:nzwidth="0x1" edc:desc="Power Reduction Timer/Counter1"/>
              <edc:SFRFieldDef edc:cname="PRTWI" edc:nzwidth="0x1" edc:desc="Power Reduction TWI"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x65"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="FOSCCAL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x66"/>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x67"/>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="PCICR" edc:nzwidth="0x8" edc:access="------nn" edc:impl="0x3" edc:_addr="0x68">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="PCIE" edc:nzwidth="0x2" edc:desc="Pin Change Interrupt Enables"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="EICRA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x69">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="ISC0" edc:nzwidth="0x2" edc:desc="External Interrupt Sense Control 0 Bits">
                <edc:SFRFieldSemantic edc:cname="LOW_LEVEL_OF_INTX" edc:desc="Low Level of INTX" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ANY_LOGICAL_CHANGE_OF_INTX" edc:desc="Any Logical Change of INTX" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING_EDGE_OF_INTX" edc:desc="Falling Edge of INTX" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RISING_EDGE_OF_INTX" edc:desc="Rising Edge of INTX" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ISC1" edc:nzwidth="0x2" edc:desc="External Interrupt Sense Control 1 Bits">
                <edc:SFRFieldSemantic edc:cname="LOW_LEVEL_OF_INTX" edc:desc="Low Level of INTX" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ANY_LOGICAL_CHANGE_OF_INTX" edc:desc="Any Logical Change of INTX" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING_EDGE_OF_INTX" edc:desc="Falling Edge of INTX" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RISING_EDGE_OF_INTX" edc:desc="Rising Edge of INTX" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ISC2" edc:nzwidth="0x2" edc:desc="External Interrupt Sense Control 2 Bits">
                <edc:SFRFieldSemantic edc:cname="LOW_LEVEL_OF_INTX" edc:desc="Low Level of INTX" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ANY_LOGICAL_CHANGE_OF_INTX" edc:desc="Any Logical Change of INTX" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING_EDGE_OF_INTX" edc:desc="Falling Edge of INTX" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RISING_EDGE_OF_INTX" edc:desc="Rising Edge of INTX" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ISC3" edc:nzwidth="0x2" edc:desc="External Interrupt Sense Control 3 Bits">
                <edc:SFRFieldSemantic edc:cname="LOW_LEVEL_OF_INTX" edc:desc="Low Level of INTX" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ANY_LOGICAL_CHANGE_OF_INTX" edc:desc="Any Logical Change of INTX" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING_EDGE_OF_INTX" edc:desc="Falling Edge of INTX" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RISING_EDGE_OF_INTX" edc:desc="Rising Edge of INTX" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x6A"/>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="PCMSK0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x6B"/>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="PCMSK1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x6C"/>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x6D"/>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TIMSK0" edc:nzwidth="0x8" edc:access="-----nnn" edc:impl="0x7" edc:_addr="0x6E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="TOIE0" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="OCIE0A" edc:nzwidth="0x1" edc:desc="Output Compare Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="OCIE0B" edc:nzwidth="0x1" edc:desc="Output Compare Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TIMSK1" edc:nzwidth="0x8" edc:access="------nn" edc:impl="0x3" edc:_addr="0x6F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="TOIE1" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Overflow Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="OCIE1A" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output Compare Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x70"/>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="VADC" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x78"/>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="VADCSR" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0x7A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="VADCCIE" edc:nzwidth="0x1" edc:desc="VADC Conversion Complete Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="VADCCIF" edc:nzwidth="0x1" edc:desc="VADC Conversion Complete Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="VADSC" edc:nzwidth="0x1" edc:desc="VADC Satrt Conversion"/>
              <edc:SFRFieldDef edc:cname="VADEN" edc:nzwidth="0x1" edc:desc="VADC Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x7B"/>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="VADMUX" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0x7C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="VADMUX" edc:nzwidth="0x4" edc:desc="Analog Channel and Gain Selection Bits"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x7D"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="DIDR0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x7E"/>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x7F"/>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TCCR1B" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0x81">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="CS1" edc:nzwidth="0x3" edc:desc="Clock Select1 bits">
                <edc:SFRFieldSemantic edc:cname="NO_CLOCK_SOURCE_STOPPED" edc:desc="No Clock Source (Stopped)" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_NO_PRESCALING" edc:desc="Running, No Prescaling" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_8" edc:desc="Running, CLK/8" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_32" edc:desc="Running, CLK/32" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_64" edc:desc="Running, CLK/64" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_128" edc:desc="Running, CLK/128" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_256" edc:desc="Running, CLK/256" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_1024" edc:desc="Running, CLK/1024" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CTC1" edc:nzwidth="0x1" edc:desc="Clear Timer/Counter on Compare Match"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x82"/>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TCNT1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x84"/>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x86"/>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="OCR1AL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x88"/>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="OCR1AH" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x89"/>
        <edc:AdjustPoint edc:offset="0x2E" edc:_addr="0x8A"/>
        <edc:SFRDef ltx:memberofperipheral="TWI" edc:cname="TWBR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xB8"/>
        <edc:SFRDef ltx:memberofperipheral="TWI" edc:cname="TWSR" edc:nzwidth="0x8" edc:access="nnnnn-nn" edc:impl="0xFB" edc:_addr="0xB9">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI">
              <edc:SFRFieldDef edc:cname="TWPS" edc:nzwidth="0x2" edc:desc="TWI Prescaler">
                <edc:SFRFieldSemantic edc:cname="1" edc:desc="1" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="4" edc:desc="4" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="16" edc:desc="16" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="64" edc:desc="64" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TWS" edc:nzwidth="0x5" edc:desc="TWI Status"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI" edc:cname="TWAR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xBA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI">
              <edc:SFRFieldDef edc:cname="TWGCE" edc:nzwidth="0x1" edc:desc="TWI General Call Recognition Enable Bit"/>
              <edc:SFRFieldDef edc:cname="TWA" edc:nzwidth="0x7" edc:desc="TWI (Slave) Address register Bits"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI" edc:cname="TWDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xBB"/>
        <edc:SFRDef ltx:memberofperipheral="TWI" edc:cname="TWCR" edc:nzwidth="0x8" edc:access="nnnnnn-n" edc:impl="0xFD" edc:_addr="0xBC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI">
              <edc:SFRFieldDef edc:cname="TWIE" edc:nzwidth="0x1" edc:desc="TWI Interrupt Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TWEN" edc:nzwidth="0x1" edc:desc="TWI Enable Bit"/>
              <edc:SFRFieldDef edc:cname="TWWC" edc:nzwidth="0x1" edc:desc="TWI Write Collition Flag"/>
              <edc:SFRFieldDef edc:cname="TWSTO" edc:nzwidth="0x1" edc:desc="TWI Stop Condition Bit"/>
              <edc:SFRFieldDef edc:cname="TWSTA" edc:nzwidth="0x1" edc:desc="TWI Start Condition Bit"/>
              <edc:SFRFieldDef edc:cname="TWEA" edc:nzwidth="0x1" edc:desc="TWI Enable Acknowledge Bit"/>
              <edc:SFRFieldDef edc:cname="TWINT" edc:nzwidth="0x1" edc:desc="TWI Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI" edc:cname="TWAMR" edc:nzwidth="0x8" edc:access="nnnnnnn-" edc:impl="0xFE" edc:_addr="0xBD">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI">
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="TWAM" edc:nzwidth="0x7"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TWI" edc:cname="TWBCSR" edc:nzwidth="0x8" edc:access="nn---nnn" edc:impl="0xC7" edc:_addr="0xBE">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TWI">
              <edc:SFRFieldDef edc:cname="TWBCIP" edc:nzwidth="0x1" edc:desc="TWI Bus Connect/Disconnect Interrupt Polarity"/>
              <edc:SFRFieldDef edc:cname="TWBDT" edc:nzwidth="0x2" edc:desc="TWI Bus Disconnect Time-out Period">
                <edc:SFRFieldSemantic edc:cname="250MS" edc:desc="250ms" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="500MS" edc:desc="500ms" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="1000MS" edc:desc="1000ms" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="2000MS" edc:desc="2000ms" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="TWBCIE" edc:nzwidth="0x1" edc:desc="TWI Bus Connect/Disconnect Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="TWBCIF" edc:nzwidth="0x1" edc:desc="TWI Bus Connect/Disconnect Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0xBF"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="CCSR" edc:nzwidth="0x8" edc:access="------nn" edc:impl="0x3" edc:_addr="0xC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="ACS" edc:nzwidth="0x1" edc:desc="Asynchronous Clock Select"/>
              <edc:SFRFieldDef edc:cname="XOE" edc:nzwidth="0x1" edc:desc="32 kHz Crystal Oscillator Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0xF" edc:_addr="0xC1"/>
        <edc:SFRDef ltx:memberofperipheral="BANDGAP" edc:cname="BGCCR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:impl="0xBF" edc:_addr="0xD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BANDGAP">
              <edc:SFRFieldDef edc:cname="BGCC" edc:nzwidth="0x6" edc:desc="BG Calibration of PTAT Current Bits"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="BGD" edc:nzwidth="0x1" edc:desc="Setting the BGD bit to one will disable the bandgap voltage reference. This bit must be cleared before enabling CC-ADC or V-ADC, and must remain unset while either ADC is enabled."/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BANDGAP" edc:cname="BGCRR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xD1"/>
        <edc:AdjustPoint edc:offset="0xE" edc:_addr="0xD2"/>
        <edc:SFRDef ltx:memberofperipheral="COULOMB_COUNTER" edc:cname="CADAC0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xE0"/>
        <edc:SFRDef ltx:memberofperipheral="COULOMB_COUNTER" edc:cname="CADAC1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xE1"/>
        <edc:SFRDef ltx:memberofperipheral="COULOMB_COUNTER" edc:cname="CADAC2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xE2"/>
        <edc:SFRDef ltx:memberofperipheral="COULOMB_COUNTER" edc:cname="CADAC3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xE3"/>
        <edc:SFRDef ltx:memberofperipheral="COULOMB_COUNTER" edc:cname="CADCSRA" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:impl="0xBF" edc:_addr="0xE4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="COULOMB_COUNTER">
              <edc:SFRFieldDef edc:cname="CADSE" edc:nzwidth="0x1" edc:desc="When the CADSE bit is written to one, the ongoing CC-ADC conversion is aborted, and the CC-ADC enters Regular Current detection mode."/>
              <edc:SFRFieldDef edc:cname="CADSI" edc:nzwidth="0x2" edc:desc="The CADSI bits determine the current sampling interval for the Regular Current detection in Power-down mode. The actual settings remain to be determined.">
                <edc:SFRFieldSemantic edc:cname="125MS" edc:desc="125ms" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="250MS" edc:desc="250ms" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="500MS" edc:desc="500ms" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="1000MS" edc:desc="1000ms" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CADAS" edc:nzwidth="0x2" edc:desc="CC_ADC Accumulate Current Select Bits">
                <edc:SFRFieldSemantic edc:cname="125MS" edc:desc="125ms" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="250MS" edc:desc="250ms" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="500MS" edc:desc="500ms" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="1000MS" edc:desc="1000ms" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CADUB" edc:nzwidth="0x1" edc:desc="CC_ADC Update Busy"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CADEN" edc:nzwidth="0x1" edc:desc="When the CADEN bit is cleared (zero), the CC-ADC is disabled. When the CADEN bit is set (one), the CC-ADC will continuously measure the voltage drop over the external sense resistor RSENSE. In Power-down, only the Regular Current detection is active. In Power-off, the CC-ADC is always disabled."/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="COULOMB_COUNTER" edc:cname="CADCSRB" edc:nzwidth="0x8" edc:access="-nnn-nnn" edc:impl="0x77" edc:_addr="0xE5">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="COULOMB_COUNTER">
              <edc:SFRFieldDef edc:cname="CADICIF" edc:nzwidth="0x1" edc:desc="CC-ADC Instantaneous Current Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="CADRCIF" edc:nzwidth="0x1" edc:desc="CC-ADC Accumulate Current Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="CADACIF" edc:nzwidth="0x1" edc:desc="CC-ADC Accumulate Current Interrupt Flag"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="CADICIE" edc:nzwidth="0x1" edc:desc="CAD Instantenous Current Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="CADRCIE" edc:nzwidth="0x1" edc:desc="Regular Current Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="CADACIE" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="COULOMB_COUNTER" edc:cname="CADRCC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xE6"/>
        <edc:SFRDef ltx:memberofperipheral="COULOMB_COUNTER" edc:cname="CADRDC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xE7"/>
        <edc:SFRDef ltx:memberofperipheral="COULOMB_COUNTER" edc:cname="CADIC" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xE8"/>
        <edc:AdjustPoint edc:offset="0x6" edc:_addr="0xEA"/>
        <edc:SFRDef ltx:memberofperipheral="FET" edc:cname="FCSR" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:impl="0x3F" edc:_addr="0xF0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FET">
              <edc:SFRFieldDef edc:cname="PFD" edc:nzwidth="0x1" edc:desc="Precharge FET disable"/>
              <edc:SFRFieldDef edc:cname="CFE" edc:nzwidth="0x1" edc:desc="Charge FET Enable"/>
              <edc:SFRFieldDef edc:cname="DFE" edc:nzwidth="0x1" edc:desc="Discharge FET Enable"/>
              <edc:SFRFieldDef edc:cname="CPS" edc:nzwidth="0x1" edc:desc="Current Protection Status"/>
              <edc:SFRFieldDef edc:cname="PWMOPC" edc:nzwidth="0x1" edc:desc="Pulse Width Modulation Modulation of OPC output"/>
              <edc:SFRFieldDef edc:cname="PWMOC" edc:nzwidth="0x1" edc:desc="Pulse Width Modulation of OC output"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CELL_BALANCING" edc:cname="CBCR" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0xF1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CELL_BALANCING">
              <edc:SFRFieldDef edc:cname="CBE" edc:nzwidth="0x4" edc:desc="Cell Balancing Enables"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BATTERY_PROTECTION" edc:cname="BPIR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xF2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BATTERY_PROTECTION">
              <edc:SFRFieldDef edc:cname="SCIE" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="DOCIE" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="COCIE" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="DUVIE" edc:nzwidth="0x1" edc:desc="Deep Under-voltage Early Warning Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="SCIF" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="DOCIF" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="COCIF" edc:nzwidth="0x1" edc:desc="Charge Over-current Protection Activated Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="DUVIF" edc:nzwidth="0x1" edc:desc="Deep Under-voltage Early Warning Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BATTERY_PROTECTION" edc:cname="BPDUV" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:impl="0x3F" edc:_addr="0xF3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BATTERY_PROTECTION">
              <edc:SFRFieldDef edc:cname="DUDL" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="4_71V" edc:desc="4.71V" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="5_03V" edc:desc="5.03V" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="5_34V" edc:desc="5.34V" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="5_66V" edc:desc="5.66V" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="5_97V" edc:desc="5.97V" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="6_29V" edc:desc="6.29V" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="6_60V" edc:desc="6.60V" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="6_91V" edc:desc="6.91V" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="7_23V" edc:desc="7.23V" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="7_54V" edc:desc="7.54V" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="7_86V" edc:desc="7.86V" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="8_17V" edc:desc="8.17V" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="8_49V" edc:desc="8.49V" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="8_80V" edc:desc="8.80V" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="9_11V" edc:desc="9.11V" edc:when="(field &amp; 0xF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="9_43V" edc:desc="9.43V" edc:when="(field &amp; 0xF) == 0x0F"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="DUVT" edc:nzwidth="0x2">
                <edc:SFRFieldSemantic edc:cname="750MS" edc:desc="750ms" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="1000MS" edc:desc="1000ms" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="1250MS" edc:desc="1250ms" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="1500MS" edc:desc="1500ms" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BATTERY_PROTECTION" edc:cname="BPSCD" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0xF4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BATTERY_PROTECTION">
              <edc:SFRFieldDef edc:cname="SCDL" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="0_100V" edc:desc="0.100V" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="0_110V" edc:desc="0.110V" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="0_120V" edc:desc="0.120V" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="0_130V" edc:desc="0.130V" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="0_140V" edc:desc="0.140V" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="0_160V" edc:desc="0.160V" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="0_180V" edc:desc="0.180V" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="0_200V" edc:desc="0.200V" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="0_220V" edc:desc="0.220V" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="0_240V" edc:desc="0.240V" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="0_260V" edc:desc="0.260V" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="0_280V" edc:desc="0.280V" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="0_320V" edc:desc="0.320V" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="0_360V" edc:desc="0.360V" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="0_400V" edc:desc="0.400V" edc:when="(field &amp; 0xF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="0_440V" edc:desc="0.440V" edc:when="(field &amp; 0xF) == 0x0F"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BATTERY_PROTECTION" edc:cname="BPOCD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xF5">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BATTERY_PROTECTION">
              <edc:SFRFieldDef edc:cname="CCDL" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="0_050V" edc:desc="0.050V" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="0_055V" edc:desc="0.055V" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="0_060V" edc:desc="0.060V" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="0_065V" edc:desc="0.065V" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="0_070V" edc:desc="0.070V" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="0_080V" edc:desc="0.080V" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="0_090V" edc:desc="0.090V" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="0_100V" edc:desc="0.100V" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="0_110V" edc:desc="0.110V" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="0_120V" edc:desc="0.120V" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="0_130V" edc:desc="0.130V" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="0_140V" edc:desc="0.140V" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="0_160V" edc:desc="0.160V" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="0_180V" edc:desc="0.180V" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="0_200V" edc:desc="0.200V" edc:when="(field &amp; 0xF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="0_220V" edc:desc="0.220V" edc:when="(field &amp; 0xF) == 0x0F"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="DCDL" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="0_050V" edc:desc="0.050V" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="0_055V" edc:desc="0.055V" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="0_060V" edc:desc="0.060V" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="0_065V" edc:desc="0.065V" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="0_070V" edc:desc="0.070V" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="0_080V" edc:desc="0.080V" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="0_090V" edc:desc="0.090V" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="0_100V" edc:desc="0.100V" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="0_110V" edc:desc="0.110V" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="0_120V" edc:desc="0.120V" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="0_130V" edc:desc="0.130V" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="0_140V" edc:desc="0.140V" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="0_160V" edc:desc="0.160V" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="0_180V" edc:desc="0.180V" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="0_200V" edc:desc="0.200V" edc:when="(field &amp; 0xF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="0_220V" edc:desc="0.220V" edc:when="(field &amp; 0xF) == 0x0F"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BATTERY_PROTECTION" edc:cname="CBPTR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xF6">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BATTERY_PROTECTION">
              <edc:SFRFieldDef edc:cname="OCPT" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="1_MS" edc:desc="1 ms" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2_MS" edc:desc="2 ms" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="4_MS" edc:desc="4 ms" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="6_MS" edc:desc="6 ms" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="8_MS" edc:desc="8 ms" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="10_MS" edc:desc="10 ms" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="12_MS" edc:desc="12 ms" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="14_MS" edc:desc="14 ms" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="16_MS" edc:desc="16 ms" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="18_MS" edc:desc="18 ms" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="20_MS" edc:desc="20 ms" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="22_MS" edc:desc="22 ms" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="24_MS" edc:desc="24 ms" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="26_MS" edc:desc="26 ms" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="28_MS" edc:desc="28 ms" edc:when="(field &amp; 0xF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="30_MS" edc:desc="30 ms" edc:when="(field &amp; 0xF) == 0x0F"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="SCPT" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="61_US" edc:desc="61 us" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="122_US" edc:desc="122 us" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="183_US" edc:desc="183 us" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="244_US" edc:desc="244 us" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="305_US" edc:desc="305 us" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="366_US" edc:desc="366 us" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="427_US" edc:desc="427 us" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="488_US" edc:desc="488 us" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="610_US" edc:desc="610 us" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="732_US" edc:desc="732 us" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="854_US" edc:desc="854 us" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="976_US" edc:desc="976 us" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="1098_US" edc:desc="1098 us" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="1220_US" edc:desc="1220 us" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="1342_US" edc:desc="1342 us" edc:when="(field &amp; 0xF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="1464_US" edc:desc="1464 us" edc:when="(field &amp; 0xF) == 0x0F"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BATTERY_PROTECTION" edc:cname="BPCR" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0xF7">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BATTERY_PROTECTION">
              <edc:SFRFieldDef edc:cname="CCD" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="DCD" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="SCD" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="DUVD" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="BATTERY_PROTECTION" edc:cname="BPPLR" edc:nzwidth="0x8" edc:access="------nn" edc:impl="0x3" edc:_addr="0xF8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BATTERY_PROTECTION">
              <edc:SFRFieldDef edc:cname="BPPL" edc:nzwidth="0x1" edc:desc="Battery Protection Parameter Lock"/>
              <edc:SFRFieldDef edc:cname="BPPLE" edc:nzwidth="0x1" edc:desc="Battery Protection Parameter Lock Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
      </edc:SFRDataSector>
      <edc:GPRDataSector edc:regionid="IRAM" edc:beginaddr="0x100" edc:endaddr="0x900"/>
    </edc:RegardlessOfMode>
  </edc:DataSpace>
  <edc:DataFlashSpace edc:endaddr="0x200" edc:magicoffset="0x810000"/>
  <edc:SignaturesSpace edc:magicoffset="0x840000">
    <edc:DeviceIDSector edc:regionid="SIGNATURES" edc:beginaddr="0x0" edc:endaddr="0x3" edc:value="0x1E9507" edc:rw="r"/>
  </edc:SignaturesSpace>
  <edc:FusesSpace edc:magicoffset="0x820000">
    <edc:ConfigFuseSector edc:regionid="FUSES" edc:beginaddr="0x0" edc:endaddr="0x2" edc:magicoffset="0x820000" edc:rw="rw">
      <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="LOW" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xCD" edc:access="nnnnnnnn" edc:_addr="0x0">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
            <edc:DCRFieldDef edc:cname="SUT_CKSEL" edc:nzwidth="0x3" edc:desc="Clock Selection">
              <edc:DCRFieldSemantic edc:cname="14CK_0MS" edc:desc="Start-up time: 14 CK + 0 ms" edc:when="(field &amp; 0x7) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="14CK_3MS9" edc:desc="Start-up time: 14 CK + 3.9 ms" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="14CK_62MS5" edc:desc="Start-up time: 14 CK + 62.5 ms" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:DCRFieldSemantic edc:cname="14CK_0MS" edc:desc="Start-up time: 14 CK + 0 ms" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="14CK_3MS9" edc:desc="Start-up time: 14 CK + 3.9 ms" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="14CK_62MS5" edc:desc="Start-up time: 14 CK + 62.5 ms" edc:when="(field &amp; 0x7) == 0x05"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BOOTRST" edc:nzwidth="0x1" edc:desc="Boot Reset vector Enabled">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BOOTSZ" edc:nzwidth="0x2" edc:desc="Select boot size">
              <edc:DCRFieldSemantic edc:cname="256W_4F00" edc:desc="Boot Flash size=256 words Boot address=$4F00" edc:when="(field &amp; 0x3) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="512W_4E00" edc:desc="Boot Flash size=512 words Boot address=$4E00" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="1024W_4C00" edc:desc="Boot Flash size=1024 words Boot address=$4C00" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="2048W_4800" edc:desc="Boot Flash size=2048 words Boot address=$4800" edc:when="(field &amp; 0x3) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="EESAVE" edc:nzwidth="0x1" edc:desc="Preserve EEPROM through the Chip Erase cycle">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WDTON" edc:nzwidth="0x1" edc:desc="Watchdog timer always on">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="HIGH" edc:nzwidth="0x8" edc:impl="0x3" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xFE" edc:access="------nn" edc:_addr="0x1">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
            <edc:DCRFieldDef edc:cname="JTAGEN" edc:nzwidth="0x1" edc:desc="JTAG Interface Enabled">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="OCDEN" edc:nzwidth="0x1" edc:desc="On-Chip Debug Enabled">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
    </edc:ConfigFuseSector>
  </edc:FusesSpace>
  <edc:LockbitsSpace edc:magicoffset="0x830000">
    <edc:ConfigFuseSector edc:regionid="LOCKBITS" edc:beginaddr="0x0" edc:endaddr="0x1" edc:magicoffset="0x830000" edc:rw="rw">
      <edc:DCRDef ltx:memberofperipheral="LOCKBIT" edc:cname="LOCKBIT" edc:nzwidth="0x8" edc:impl="0x3F" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xFF" edc:access="--nnnnnn" edc:_addr="0x0">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="LOCKBIT">
            <edc:DCRFieldDef edc:cname="LB" edc:nzwidth="0x2" edc:desc="Memory Lock">
              <edc:DCRFieldSemantic edc:cname="PROG_VER_DISABLED" edc:desc="Further programming and verification disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="PROG_DISABLED" edc:desc="Further programming disabled" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="NO_LOCK" edc:desc="No memory lock features enabled" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BLB0" edc:nzwidth="0x2" edc:desc="Boot Loader Protection Mode">
              <edc:DCRFieldSemantic edc:cname="LPM_SPM_DISABLE" edc:desc="LPM and SPM prohibited in Application Section" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="LPM_DISABLE" edc:desc="LPM prohibited in Application Section" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="SPM_DISABLE" edc:desc="SPM prohibited in Application Section" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="NO_LOCK" edc:desc="No lock on SPM and LPM in Application Section" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BLB1" edc:nzwidth="0x2" edc:desc="Boot Loader Protection Mode">
              <edc:DCRFieldSemantic edc:cname="LPM_SPM_DISABLE" edc:desc="LPM and SPM prohibited in Boot Section" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="LPM_DISABLE" edc:desc="LPM prohibited in Boot Section" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="SPM_DISABLE" edc:desc="SPM prohibited in Boot Section" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="NO_LOCK" edc:desc="No lock on SPM and LPM in Boot Section" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
    </edc:ConfigFuseSector>
  </edc:LockbitsSpace>
</edc:PIC>
