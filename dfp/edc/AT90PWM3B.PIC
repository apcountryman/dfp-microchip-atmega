<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<edc:PIC xmlns:atdf="http://crownking/atdf" xmlns:edc="http://crownking/edc" xmlns:ltx="http://crownking/ltx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://crownking/edc edc/PIC.xsd" edc:name="AT90PWM3B" edc:arch="avr8" edc:procid="0x0000" atdf:architecture="AVR8" atdf:family="megaAVR" edc:hasFreeze="false">
  <edc:Properties>
    <edc:Property edc:propkey="file.registers.are.odd.address.accessible" edc:propvalue="true"/>
  </edc:Properties>
  <edc:Power>
    <edc:VDD edc:minvoltage="2.7" edc:maxvoltage="5.5" edc:nominalvoltage="5.000"/>
  </edc:Power>
  <edc:Programming edc:haslvp2="true" edc:haschecksum="false">
    <edc:ProgrammingRowSize edc:progop="pgm" edc:nzsize="64"/>
    <edc:ProgrammingRowSize edc:progop="cfg" edc:nzsize="1"/>
    <edc:ProgrammingRowSize edc:progop="eedata" edc:nzsize="4"/>
  </edc:Programming>
  <edc:ArchDef edc:name="avr8" edc:desc="avr8">
    <edc:MemTraits>
      <edc:ProgramMemTraits edc:addrinc="0x1" edc:locsize="0x2" edc:wordimpl="0xFFFF" edc:wordinit="0xFFFF" edc:wordsafe="0xFFFF" edc:wordsize="0xFFFF"/>
      <edc:DataMemTraits edc:addrinc="0x1" edc:locsize="0x1" edc:wordimpl="0xFF" edc:wordinit="0xFF" edc:wordsafe="0xFF" edc:wordsize="0x1"/>
      <edc:EEDataMemTraits edc:magicoffset="0x810000"/>
    </edc:MemTraits>
  </edc:ArchDef>
  <edc:InstructionSet edc:instructionsetid="avr8">
    <edc:InstructionSet edc:instructionsetid="avr8base"/>
    <edc:InstructionSet edc:instructionsetid="avr8brk"/>
    <edc:InstructionSet edc:instructionsetid="avr8movw"/>
    <edc:InstructionSet edc:instructionsetid="avr8lpm"/>
    <edc:InstructionSet edc:instructionsetid="avr8lpmx"/>
    <edc:InstructionSet edc:instructionsetid="avr8sram"/>
    <edc:InstructionSet edc:instructionsetid="avr8mul"/>
    <edc:InstructionSet edc:instructionsetid="avr8spm"/>
  </edc:InstructionSet>
  <edc:InterruptList>
    <edc:Interrupt edc:irq="0" edc:cname="RESET" edc:desc="External Pin, Power-on Reset, Brown-out Reset, Watchdog Reset and JTAG AVR Reset"/>
    <edc:Interrupt edc:irq="1" edc:cname="PSC2_CAPT" edc:desc="PSC2 Capture Event"/>
    <edc:Interrupt edc:irq="2" edc:cname="PSC2_EC" edc:desc="PSC2 End Cycle"/>
    <edc:Interrupt edc:irq="3" edc:cname="PSC1_CAPT" edc:desc="PSC1 Capture Event"/>
    <edc:Interrupt edc:irq="4" edc:cname="PSC1_EC" edc:desc="PSC1 End Cycle"/>
    <edc:Interrupt edc:irq="5" edc:cname="PSC0_CAPT" edc:desc="PSC0 Capture Event"/>
    <edc:Interrupt edc:irq="6" edc:cname="PSC0_EC" edc:desc="PSC0 End Cycle"/>
    <edc:Interrupt edc:irq="7" edc:cname="ANALOG_COMP_0" edc:desc="Analog Comparator 0"/>
    <edc:Interrupt edc:irq="8" edc:cname="ANALOG_COMP_1" edc:desc="Analog Comparator 1"/>
    <edc:Interrupt edc:irq="9" edc:cname="ANALOG_COMP_2" edc:desc="Analog Comparator 2"/>
    <edc:Interrupt edc:irq="10" edc:cname="INT0" edc:desc="External Interrupt Request 0"/>
    <edc:Interrupt edc:irq="11" edc:cname="TIMER1_CAPT" edc:desc="Timer/Counter1 Capture Event"/>
    <edc:Interrupt edc:irq="12" edc:cname="TIMER1_COMPA" edc:desc="Timer/Counter1 Compare Match A"/>
    <edc:Interrupt edc:irq="13" edc:cname="TIMER1_COMPB" edc:desc="Timer/Counter Compare Match B"/>
    <edc:Interrupt edc:irq="14" edc:cname="RESERVED15" edc:desc=""/>
    <edc:Interrupt edc:irq="15" edc:cname="TIMER1_OVF" edc:desc="Timer/Counter1 Overflow"/>
    <edc:Interrupt edc:irq="16" edc:cname="TIMER0_COMPA" edc:desc="Timer/Counter0 Compare Match A"/>
    <edc:Interrupt edc:irq="17" edc:cname="TIMER0_OVF" edc:desc="Timer/Counter0 Overflow"/>
    <edc:Interrupt edc:irq="18" edc:cname="ADC" edc:desc="ADC Conversion Complete"/>
    <edc:Interrupt edc:irq="19" edc:cname="INT1" edc:desc="External Interrupt Request 1"/>
    <edc:Interrupt edc:irq="20" edc:cname="SPI_STC" edc:desc="SPI Serial Transfer Complete"/>
    <edc:Interrupt edc:irq="21" edc:cname="USART_RX" edc:desc="USART, Rx Complete"/>
    <edc:Interrupt edc:irq="22" edc:cname="USART_UDRE" edc:desc="USART Data Register Empty"/>
    <edc:Interrupt edc:irq="23" edc:cname="USART_TX" edc:desc="USART, Tx Complete"/>
    <edc:Interrupt edc:irq="24" edc:cname="INT2" edc:desc="External Interrupt Request 2"/>
    <edc:Interrupt edc:irq="25" edc:cname="WDT" edc:desc="Watchdog Timeout Interrupt"/>
    <edc:Interrupt edc:irq="26" edc:cname="EE_READY" edc:desc="EEPROM Ready"/>
    <edc:Interrupt edc:irq="27" edc:cname="TIMER0_COMPB" edc:desc="Timer Counter 0 Compare Match B"/>
    <edc:Interrupt edc:irq="28" edc:cname="INT3" edc:desc="External Interrupt Request 3"/>
    <edc:Interrupt edc:irq="29" edc:cname="RESERVED30" edc:desc=""/>
    <edc:Interrupt edc:irq="30" edc:cname="RESERVED31" edc:desc=""/>
    <edc:Interrupt edc:irq="31" edc:cname="SPM_READY" edc:desc="Store Program Memory Read"/>
  </edc:InterruptList>
  <edc:PeripheralList>
    <edc:Peripheral edc:cname="PORTB" edc:desc="I/O Port"/>
    <edc:Peripheral edc:cname="PORTC" edc:desc="I/O Port"/>
    <edc:Peripheral edc:cname="PORTD" edc:desc="I/O Port"/>
    <edc:Peripheral edc:cname="PORTE" edc:desc="I/O Port"/>
    <edc:Peripheral edc:cname="BOOT_LOAD" edc:desc="Bootloader"/>
    <edc:Peripheral edc:cname="EUSART" edc:desc="Extended USART"/>
    <edc:Peripheral edc:cname="AC" edc:desc="Analog Comparator"/>
    <edc:Peripheral edc:cname="DAC" edc:desc="Digital-to-Analog Converter"/>
    <edc:Peripheral edc:cname="CPU" edc:desc="CPU Registers"/>
    <edc:Peripheral edc:cname="TC0" edc:desc="Timer/Counter, 8-bit"/>
    <edc:Peripheral edc:cname="TC1" edc:desc="Timer/Counter, 16-bit"/>
    <edc:Peripheral edc:cname="ADC" edc:desc="Analog-to-Digital Converter"/>
    <edc:Peripheral edc:cname="USART" edc:desc="USART"/>
    <edc:Peripheral edc:cname="SPI" edc:desc="Serial Peripheral Interface"/>
    <edc:Peripheral edc:cname="WDT" edc:desc="Watchdog Timer"/>
    <edc:Peripheral edc:cname="EXINT" edc:desc="External Interrupts"/>
    <edc:Peripheral edc:cname="EEPROM" edc:desc="EEPROM"/>
    <edc:Peripheral edc:cname="PSC0" edc:desc="Power Stage Controller"/>
    <edc:Peripheral edc:cname="PSC1" edc:desc="Power Stage Controller"/>
    <edc:Peripheral edc:cname="PSC2" edc:desc="Power Stage Controller"/>
    <edc:Peripheral edc:cname="FUSE" edc:desc="Fuses"/>
    <edc:Peripheral edc:cname="LOCKBIT" edc:desc="Lockbits"/>
  </edc:PeripheralList>
  <edc:ProgramSpace>
    <edc:CodeSector edc:regionid="IFLASH" edc:beginaddr="0x0" edc:endaddr="0x1000" atdf:pagesize="0x40" edc:rw="rw"/>
    <edc:CodeSector edc:regionid="BOOT_SECTION_1" edc:beginaddr="0xF80" edc:endaddr="0x1000" atdf:pagesize="0x40" edc:rw="rw"/>
    <edc:CodeSector edc:regionid="BOOT_SECTION_2" edc:beginaddr="0xF00" edc:endaddr="0x1000" atdf:pagesize="0x40" edc:rw="rw"/>
    <edc:CodeSector edc:regionid="BOOT_SECTION_3" edc:beginaddr="0xE00" edc:endaddr="0x1000" atdf:pagesize="0x40" edc:rw="rw"/>
    <edc:CodeSector edc:regionid="BOOT_SECTION_4" edc:beginaddr="0xC00" edc:endaddr="0x1000" atdf:pagesize="0x40" edc:rw="rw"/>
  </edc:ProgramSpace>
  <edc:DataSpace edc:magicoffset="0x800000">
    <edc:RegardlessOfMode>
      <edc:NMMRPlace edc:regionid="corenmmrs">
        <edc:SFRDef edc:nzwidth="0x10" edc:cname="PC" edc:impl="0xFFFF" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:desc="Program Counter" edc:nmmrid="60"/>
      </edc:NMMRPlace>
      <edc:SFRDataSector edc:regionid="REGISTERS" edc:beginaddr="0x0" edc:endaddr="0x20">
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R0" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x0"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R1" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R2" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x2"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R3" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x3"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R4" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x4"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R5" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x5"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R6" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x6"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R7" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x7"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R8" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x8"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R9" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x9"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R10" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xA"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R11" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xB"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R12" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xC"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R13" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xD"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R14" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xE"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R15" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0xF"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R16" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x10"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R17" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x11"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R18" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x12"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R19" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x13"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R20" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x14"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R21" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x15"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R22" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x16"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R23" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x17"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R24" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x18"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R25" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x19"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R26" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1A"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R27" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1B"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R28" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1C"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R29" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1D"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R30" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1E"/>
        <edc:SFRDef edc:nzwidth="0x8" edc:cname="R31" edc:impl="0xFF" edc:access="nnnnnnnn" edc:por="xxxxxxxx" edc:mclr="xxxxxxxx" edc:desc="General-Purpose Register" edc:_addr="0x1F"/>
      </edc:SFRDataSector>
      <edc:SFRDataSector edc:regionid="MAPPED_IO" edc:beginaddr="0x20" edc:endaddr="0x100">
        <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x20"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PINB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x23"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="DDRB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x24"/>
        <edc:SFRDef ltx:memberofperipheral="PORTB" edc:cname="PORTB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x25"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PINC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x26"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="DDRC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x27"/>
        <edc:SFRDef ltx:memberofperipheral="PORTC" edc:cname="PORTC" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x28"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PIND" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x29"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="DDRD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x2A"/>
        <edc:SFRDef ltx:memberofperipheral="PORTD" edc:cname="PORTD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x2B"/>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="PINE" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x2C"/>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="DDRE" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x2D"/>
        <edc:SFRDef ltx:memberofperipheral="PORTE" edc:cname="PORTE" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x2E"/>
        <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x2F"/>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TIFR0" edc:nzwidth="0x8" edc:access="-----nnn" edc:impl="0x7" edc:_addr="0x35">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="TOV0" edc:nzwidth="0x1" edc:desc="Timer/Counter0 Overflow Flag"/>
              <edc:SFRFieldDef edc:cname="OCF0A" edc:nzwidth="0x1" edc:desc="Timer/Counter0 Output Compare Flag 0A"/>
              <edc:SFRFieldDef edc:cname="OCF0B" edc:nzwidth="0x1" edc:desc="Timer/Counter0 Output Compare Flag 0B"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TIFR1" edc:nzwidth="0x8" edc:access="--n--nnn" edc:impl="0x27" edc:_addr="0x36">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="TOV1" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Overflow Flag"/>
              <edc:SFRFieldDef edc:cname="OCF1A" edc:nzwidth="0x1" edc:desc="Output Compare Flag 1A"/>
              <edc:SFRFieldDef edc:cname="OCF1B" edc:nzwidth="0x1" edc:desc="Output Compare Flag 1B"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="ICF1" edc:nzwidth="0x1" edc:desc="Input Capture Flag 1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x37"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="GPIOR1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x39">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="GPIOR" edc:nzwidth="0x8" edc:desc="General Purpose IO Register 1 bis"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="GPIOR2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x3A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="GPIOR" edc:nzwidth="0x8" edc:desc="General Purpose IO Register 2 bis"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="GPIOR3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x3B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="GPIOR" edc:nzwidth="0x8" edc:desc="General Purpose IO Register 3 bis"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="EIFR" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0x3C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="INTF" edc:nzwidth="0x4" edc:desc="External Interrupt Flags"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="EIMSK" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0x3D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="INT" edc:nzwidth="0x4" edc:desc="External Interrupt Request Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="GPIOR0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x3E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="GPIOR00" edc:nzwidth="0x1" edc:desc="General Purpose IO Register 0 bit 0"/>
              <edc:SFRFieldDef edc:cname="GPIOR01" edc:nzwidth="0x1" edc:desc="General Purpose IO Register 0 bit 1"/>
              <edc:SFRFieldDef edc:cname="GPIOR02" edc:nzwidth="0x1" edc:desc="General Purpose IO Register 0 bit 2"/>
              <edc:SFRFieldDef edc:cname="GPIOR03" edc:nzwidth="0x1" edc:desc="General Purpose IO Register 0 bit 3"/>
              <edc:SFRFieldDef edc:cname="GPIOR04" edc:nzwidth="0x1" edc:desc="General Purpose IO Register 0 bit 4"/>
              <edc:SFRFieldDef edc:cname="GPIOR05" edc:nzwidth="0x1" edc:desc="General Purpose IO Register 0 bit 5"/>
              <edc:SFRFieldDef edc:cname="GPIOR06" edc:nzwidth="0x1" edc:desc="General Purpose IO Register 0 bit 6"/>
              <edc:SFRFieldDef edc:cname="GPIOR07" edc:nzwidth="0x1" edc:desc="General Purpose IO Register 0 bit 7"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EEPROM" edc:cname="EECR" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:impl="0x3F" edc:_addr="0x3F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EEPROM">
              <edc:SFRFieldDef edc:cname="EERE" edc:nzwidth="0x1" edc:desc="EEPROM Read Enable"/>
              <edc:SFRFieldDef edc:cname="EEWE" edc:nzwidth="0x1" edc:desc="EEPROM Write Enable"/>
              <edc:SFRFieldDef edc:cname="EEMWE" edc:nzwidth="0x1" edc:desc="EEPROM Master Write Enable"/>
              <edc:SFRFieldDef edc:cname="EERIE" edc:nzwidth="0x1" edc:desc="EEPROM Ready Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="EEPM" edc:nzwidth="0x2" edc:desc="EEPROM Programming Mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EEPROM" edc:cname="EEDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x40">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EEPROM">
              <edc:SFRFieldDef edc:cname="EEDR" edc:nzwidth="0x8" edc:desc="EEPROM Data Bits"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EEPROM" edc:cname="EEAR" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:impl="0xFFF" edc:_addr="0x41">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EEPROM">
              <edc:SFRFieldDef edc:cname="EEAR" edc:nzwidth="0xC" edc:desc="EEPROM Address bytes"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC0 TC1" edc:cname="GTCCR" edc:nzwidth="0x8" edc:access="nn-----n" edc:impl="0xC1" edc:_addr="0x43">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="PSR10" edc:nzwidth="0x1" edc:desc="Prescaler Reset Timer/Counter1 and Timer/Counter0"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="ICPSEL1" edc:nzwidth="0x1" edc:desc="Timer1 Input Capture Selection Bit"/>
              <edc:SFRFieldDef edc:cname="TSM" edc:nzwidth="0x1" edc:desc="Timer/Counter Synchronization Mode"/>
            </edc:SFRMode>
            <edc:SFRMode edc:id="DS.1" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="PSRSYNC" edc:nzwidth="0x1" edc:desc="Prescaler Reset Timer/Counter1 and Timer/Counter0"/>
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="TSM" edc:nzwidth="0x1" edc:desc="Timer/Counter Synchronization Mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TCCR0A" edc:nzwidth="0x8" edc:access="nnnn--nn" edc:impl="0xF3" edc:_addr="0x44">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="WGM0" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="COM0B" edc:nzwidth="0x2" edc:desc="Compare Output Mode, Fast PWm"/>
              <edc:SFRFieldDef edc:cname="COM0A" edc:nzwidth="0x2" edc:desc="Compare Output Mode, Phase Correct PWM Mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TCCR0B" edc:nzwidth="0x8" edc:access="nn--nnnn" edc:impl="0xCF" edc:_addr="0x45">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="CS0" edc:nzwidth="0x3" edc:desc="Clock Select">
                <edc:SFRFieldSemantic edc:cname="NO_CLOCK_SOURCE_STOPPED" edc:desc="No Clock Source (Stopped)" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_NO_PRESCALING" edc:desc="Running, No Prescaling" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_8" edc:desc="Running, CLK/8" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_64" edc:desc="Running, CLK/64" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_256" edc:desc="Running, CLK/256" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_1024" edc:desc="Running, CLK/1024" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_EXTCLK_TN_FALLING_EDGE" edc:desc="Running, ExtClk Tn Falling Edge" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_EXTCLK_TN_RISING_EDGE" edc:desc="Running, ExtClk Tn Rising Edge" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="WGM02" edc:nzwidth="0x1"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="FOC0B" edc:nzwidth="0x1" edc:desc="Force Output Compare B"/>
              <edc:SFRFieldDef edc:cname="FOC0A" edc:nzwidth="0x1" edc:desc="Force Output Compare A"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TCNT0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x46">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="TCNT0" edc:nzwidth="0x8" edc:desc="Timer Counter 0 value"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="OCR0A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x47">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="OCR0A" edc:nzwidth="0x8" edc:desc="Timer/Counter0 Output Compare A"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="OCR0B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x48">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="OCR0B" edc:nzwidth="0x8" edc:desc="Timer/Counter0 Output Compare B"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="PLLCSR" edc:nzwidth="0x8" edc:access="-----nnn" edc:impl="0x7" edc:_addr="0x49">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="PLOCK" edc:nzwidth="0x1" edc:desc="PLL Lock Detector"/>
              <edc:SFRFieldDef edc:cname="PLLE" edc:nzwidth="0x1" edc:desc="PLL Enable"/>
              <edc:SFRFieldDef edc:cname="PLLF" edc:nzwidth="0x1" edc:desc="PLL Factor"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4A"/>
        <edc:SFRDef ltx:memberofperipheral="SPI" edc:cname="SPCR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x4C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI">
              <edc:SFRFieldDef edc:cname="SPR" edc:nzwidth="0x2" edc:desc="SPI Clock Rate Selects">
                <edc:SFRFieldSemantic edc:cname="FOSC_4" edc:desc="fosc/4" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_16" edc:desc="fosc/16" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_64" edc:desc="fosc/64" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_128" edc:desc="fosc/128" edc:when="(field &amp; 0x3) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_2" edc:desc="fosc/2" edc:when="(field &amp; 0x3) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_8" edc:desc="fosc/8" edc:when="(field &amp; 0x3) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_32" edc:desc="fosc/32" edc:when="(field &amp; 0x3) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="FOSC_64" edc:desc="fosc/64" edc:when="(field &amp; 0x3) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase"/>
              <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock polarity"/>
              <edc:SFRFieldDef edc:cname="MSTR" edc:nzwidth="0x1" edc:desc="Master/Slave Select"/>
              <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order"/>
              <edc:SFRFieldDef edc:cname="SPE" edc:nzwidth="0x1" edc:desc="SPI Enable"/>
              <edc:SFRFieldDef edc:cname="SPIE" edc:nzwidth="0x1" edc:desc="SPI Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI" edc:cname="SPSR" edc:nzwidth="0x8" edc:access="nn-----n" edc:impl="0xC1" edc:_addr="0x4D">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI">
              <edc:SFRFieldDef edc:cname="SPI2X" edc:nzwidth="0x1" edc:desc="Double SPI Speed Bit"/>
              <edc:AdjustPoint edc:offset="0x5"/>
              <edc:SFRFieldDef edc:cname="WCOL" edc:nzwidth="0x1" edc:desc="Write Collision Flag"/>
              <edc:SFRFieldDef edc:cname="SPIF" edc:nzwidth="0x1" edc:desc="SPI Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="SPI" edc:cname="SPDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x4E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SPI">
              <edc:SFRFieldDef edc:cname="SPD" edc:nzwidth="0x8" edc:desc="SPI Data bits"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4F"/>
        <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="ACSR" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:impl="0xF7" edc:_addr="0x50">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
              <edc:SFRFieldDef edc:cname="AC0O" edc:nzwidth="0x1" edc:desc="Analog Comparator 0 Output Bit"/>
              <edc:SFRFieldDef edc:cname="AC1O" edc:nzwidth="0x1" edc:desc="Analog Comparator 1 Output Bit"/>
              <edc:SFRFieldDef edc:cname="AC2O" edc:nzwidth="0x1" edc:desc="Analog Comparator 2 Output Bit"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="AC0IF" edc:nzwidth="0x1" edc:desc="Analog Comparator 0 Interrupt Flag Bit"/>
              <edc:SFRFieldDef edc:cname="AC1IF" edc:nzwidth="0x1" edc:desc="Analog Comparator 1  Interrupt Flag Bit"/>
              <edc:SFRFieldDef edc:cname="AC2IF" edc:nzwidth="0x1" edc:desc="Analog Comparator 2 Interrupt Flag Bit"/>
              <edc:SFRFieldDef edc:cname="ACCKDIV" edc:nzwidth="0x1" edc:desc="Analog Comparator Clock Divider"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x51"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SMCR" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0x53">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="SE" edc:nzwidth="0x1" edc:desc="Sleep Enable"/>
              <edc:SFRFieldDef edc:cname="SM" edc:nzwidth="0x3" edc:desc="Sleep Mode Select bits">
                <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Idle" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ADC" edc:desc="ADC Noise Reduction (If Available)" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="PDOWN" edc:desc="Power Down" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x03" edc:desc="Reserved" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x04" edc:desc="Reserved" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x05" edc:desc="Reserved" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="STDBY" edc:desc="Standby" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="VAL_0x07" edc:desc="Reserved" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="MCUSR" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0x54">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="PORF" edc:nzwidth="0x1" edc:desc="Power-on reset flag"/>
              <edc:SFRFieldDef edc:cname="EXTRF" edc:nzwidth="0x1" edc:desc="External Reset Flag"/>
              <edc:SFRFieldDef edc:cname="BORF" edc:nzwidth="0x1" edc:desc="Brown-out Reset Flag"/>
              <edc:SFRFieldDef edc:cname="WDRF" edc:nzwidth="0x1" edc:desc="Watchdog Reset Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="MCUCR" edc:nzwidth="0x8" edc:access="n--n--nn" edc:impl="0x93" edc:_addr="0x55">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="IVCE" edc:nzwidth="0x1" edc:desc="Interrupt Vector Change Enable"/>
              <edc:SFRFieldDef edc:cname="IVSEL" edc:nzwidth="0x1" edc:desc="Interrupt Vector Select"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PUD" edc:nzwidth="0x1" edc:desc="Pull-up disable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="SPIPS" edc:nzwidth="0x1" edc:desc="SPI Pin Select"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x56"/>
        <edc:SFRDef ltx:memberofperipheral="BOOT_LOAD" edc:cname="SPMCSR" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:impl="0xDF" edc:_addr="0x57">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="BOOT_LOAD">
              <edc:SFRFieldDef edc:cname="SPMEN" edc:nzwidth="0x1" edc:desc="Store Program Memory Enable"/>
              <edc:SFRFieldDef edc:cname="PGERS" edc:nzwidth="0x1" edc:desc="Page Erase"/>
              <edc:SFRFieldDef edc:cname="PGWRT" edc:nzwidth="0x1" edc:desc="Page Write"/>
              <edc:SFRFieldDef edc:cname="BLBSET" edc:nzwidth="0x1" edc:desc="Boot Lock Bit Set"/>
              <edc:SFRFieldDef edc:cname="RWWSRE" edc:nzwidth="0x1" edc:desc="Read While Write section read enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="RWWSB" edc:nzwidth="0x1" edc:desc="Read While Write Section Busy"/>
              <edc:SFRFieldDef edc:cname="SPMIE" edc:nzwidth="0x1" edc:desc="SPM Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x58"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SP" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x5D"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="SREG" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x5F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="C" edc:nzwidth="0x1" edc:desc="Carry Flag"/>
              <edc:SFRFieldDef edc:cname="Z" edc:nzwidth="0x1" edc:desc="Zero Flag"/>
              <edc:SFRFieldDef edc:cname="N" edc:nzwidth="0x1" edc:desc="Negative Flag"/>
              <edc:SFRFieldDef edc:cname="V" edc:nzwidth="0x1" edc:desc="Two's Complement Overflow Flag"/>
              <edc:SFRFieldDef edc:cname="S" edc:nzwidth="0x1" edc:desc="Sign Bit"/>
              <edc:SFRFieldDef edc:cname="H" edc:nzwidth="0x1" edc:desc="Half Carry Flag"/>
              <edc:SFRFieldDef edc:cname="T" edc:nzwidth="0x1" edc:desc="Bit Copy Storage"/>
              <edc:SFRFieldDef edc:cname="I" edc:nzwidth="0x1" edc:desc="Global Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="WDTCSR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x60">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
              <edc:SFRFieldDef edc:cname="WDP" edc:nzwidth="0x6" edc:mask="0x27" edc:desc="Watchdog Timer Prescaler Bits">
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_2K" edc:desc="Oscillator Cycles 2K" edc:when="(field &amp; 0x27) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_4K" edc:desc="Oscillator Cycles 4K" edc:when="(field &amp; 0x27) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_8K" edc:desc="Oscillator Cycles 8K" edc:when="(field &amp; 0x27) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_16K" edc:desc="Oscillator Cycles 16K" edc:when="(field &amp; 0x27) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_32K" edc:desc="Oscillator Cycles 32K" edc:when="(field &amp; 0x27) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_64K" edc:desc="Oscillator Cycles 64K" edc:when="(field &amp; 0x27) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_128K" edc:desc="Oscillator Cycles 128K" edc:when="(field &amp; 0x27) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_256K" edc:desc="Oscillator Cycles 256K" edc:when="(field &amp; 0x27) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_512K" edc:desc="Oscillator Cycles 512K" edc:when="(field &amp; 0x27) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="OSCILLATOR_CYCLES_1024K" edc:desc="Oscillator Cycles 1024K" edc:when="(field &amp; 0x27) == 0x09"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="-3"/>
              <edc:SFRFieldDef edc:cname="WDE" edc:nzwidth="0x1" edc:desc="Watch Dog Enable"/>
              <edc:SFRFieldDef edc:cname="WDCE" edc:nzwidth="0x1" edc:desc="Watchdog Change Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="WDIE" edc:nzwidth="0x1" edc:desc="Watchdog Timeout Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="WDIF" edc:nzwidth="0x1" edc:desc="Watchdog Timeout Interrupt Flag"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="CLKPR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:impl="0x8F" edc:_addr="0x61">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="CLKPS" edc:nzwidth="0x4">
                <edc:SFRFieldSemantic edc:cname="1" edc:desc="1" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2" edc:desc="2" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="4" edc:desc="4" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="8" edc:desc="8" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="16" edc:desc="16" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="32" edc:desc="32" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="64" edc:desc="64" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="128" edc:desc="128" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="256" edc:desc="256" edc:when="(field &amp; 0xF) == 0x08"/>
              </edc:SFRFieldDef>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="CLKPCE" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x62"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="PRR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x64">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="PRADC" edc:nzwidth="0x1" edc:desc="Power Reduction ADC"/>
              <edc:SFRFieldDef edc:cname="PRUSART0" edc:nzwidth="0x1" edc:desc="Power Reduction USART"/>
              <edc:SFRFieldDef edc:cname="PRSPI" edc:nzwidth="0x1" edc:desc="Power Reduction Serial Peripheral Interface"/>
              <edc:SFRFieldDef edc:cname="PRTIM0" edc:nzwidth="0x1" edc:desc="Power Reduction Timer/Counter0"/>
              <edc:SFRFieldDef edc:cname="PRTIM1" edc:nzwidth="0x1" edc:desc="Power Reduction Timer/Counter1"/>
              <edc:SFRFieldDef edc:cname="PRPSC0" edc:nzwidth="0x1" edc:desc="Power Reduction PSC0"/>
              <edc:SFRFieldDef edc:cname="PRPSC1" edc:nzwidth="0x1" edc:desc="Power Reduction PSC1"/>
              <edc:SFRFieldDef edc:cname="PRPSC2" edc:nzwidth="0x1" edc:desc="Power Reduction PSC2"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x65"/>
        <edc:SFRDef ltx:memberofperipheral="CPU" edc:cname="OSCCAL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x66">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CPU">
              <edc:SFRFieldDef edc:cname="OSCCAL" edc:nzwidth="0x8" edc:desc="Oscillator Calibration "/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x67"/>
        <edc:SFRDef ltx:memberofperipheral="EXINT" edc:cname="EICRA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x69">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EXINT">
              <edc:SFRFieldDef edc:cname="ISC0" edc:nzwidth="0x2" edc:desc="External Interrupt Sense Control Bit">
                <edc:SFRFieldSemantic edc:cname="LOW_LEVEL_OF_INTX" edc:desc="Low Level of INTX" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ANY_LOGICAL_CHANGE_OF_INTX" edc:desc="Any Logical Change of INTX" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING_EDGE_OF_INTX" edc:desc="Falling Edge of INTX" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RISING_EDGE_OF_INTX" edc:desc="Rising Edge of INTX" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ISC1" edc:nzwidth="0x2" edc:desc="External Interrupt Sense Control Bit">
                <edc:SFRFieldSemantic edc:cname="LOW_LEVEL_OF_INTX" edc:desc="Low Level of INTX" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ANY_LOGICAL_CHANGE_OF_INTX" edc:desc="Any Logical Change of INTX" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING_EDGE_OF_INTX" edc:desc="Falling Edge of INTX" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RISING_EDGE_OF_INTX" edc:desc="Rising Edge of INTX" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ISC2" edc:nzwidth="0x2" edc:desc="External Interrupt Sense Control Bit">
                <edc:SFRFieldSemantic edc:cname="LOW_LEVEL_OF_INTX" edc:desc="Low Level of INTX" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ANY_LOGICAL_CHANGE_OF_INTX" edc:desc="Any Logical Change of INTX" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING_EDGE_OF_INTX" edc:desc="Falling Edge of INTX" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RISING_EDGE_OF_INTX" edc:desc="Rising Edge of INTX" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="ISC3" edc:nzwidth="0x2" edc:desc="External Interrupt Sense Control Bit">
                <edc:SFRFieldSemantic edc:cname="LOW_LEVEL_OF_INTX" edc:desc="Low Level of INTX" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ANY_LOGICAL_CHANGE_OF_INTX" edc:desc="Any Logical Change of INTX" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="FALLING_EDGE_OF_INTX" edc:desc="Falling Edge of INTX" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RISING_EDGE_OF_INTX" edc:desc="Rising Edge of INTX" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x6A"/>
        <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="TIMSK0" edc:nzwidth="0x8" edc:access="-----nnn" edc:impl="0x7" edc:_addr="0x6E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
              <edc:SFRFieldDef edc:cname="TOIE0" edc:nzwidth="0x1" edc:desc="Timer/Counter0 Overflow Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="OCIE0A" edc:nzwidth="0x1" edc:desc="Timer/Counter0 Output Compare Match A Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="OCIE0B" edc:nzwidth="0x1" edc:desc="Timer/Counter0 Output Compare Match B Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TIMSK1" edc:nzwidth="0x8" edc:access="--n--nnn" edc:impl="0x27" edc:_addr="0x6F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="TOIE1" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Overflow Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="OCIE1A" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output CompareA Match Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="OCIE1B" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Output CompareB Match Interrupt Enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="ICIE1" edc:nzwidth="0x1" edc:desc="Timer/Counter1 Input Capture Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x70"/>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="AMP0CSR" edc:nzwidth="0x8" edc:access="nnnn--nn" edc:impl="0xF3" edc:_addr="0x76">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="AMP0TS" edc:nzwidth="0x2"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="AMP0G" edc:nzwidth="0x2"/>
              <edc:SFRFieldDef edc:cname="AMP0IS" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="AMP0EN" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="AMP1CSR" edc:nzwidth="0x8" edc:access="nnnn--nn" edc:impl="0xF3" edc:_addr="0x77">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="AMP1TS" edc:nzwidth="0x2"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="AMP1G" edc:nzwidth="0x2"/>
              <edc:SFRFieldDef edc:cname="AMP1IS" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="AMP1EN" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADC" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x78">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="ADC" edc:nzwidth="0x10" edc:desc="ADC Data Register"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADCSRA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x7A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="ADPS" edc:nzwidth="0x3" edc:desc="ADC  Prescaler Select Bits"/>
              <edc:SFRFieldDef edc:cname="ADIE" edc:nzwidth="0x1" edc:desc="ADC Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="ADIF" edc:nzwidth="0x1" edc:desc="ADC Interrupt Flag"/>
              <edc:SFRFieldDef edc:cname="ADATE" edc:nzwidth="0x1" edc:desc="ADC Auto Trigger Enable"/>
              <edc:SFRFieldDef edc:cname="ADSC" edc:nzwidth="0x1" edc:desc="ADC Start Conversion"/>
              <edc:SFRFieldDef edc:cname="ADEN" edc:nzwidth="0x1" edc:desc="ADC Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADCSRB" edc:nzwidth="0x8" edc:access="n---nnnn" edc:impl="0x8F" edc:_addr="0x7B">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="ADTS" edc:nzwidth="0x4" edc:desc="ADC Auto Trigger Source"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="ADHSM" edc:nzwidth="0x1" edc:desc="ADC High Speed Mode"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="ADMUX" edc:nzwidth="0x8" edc:access="nnn-nnnn" edc:impl="0xEF" edc:_addr="0x7C">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="MUX" edc:nzwidth="0x4" edc:desc="Analog Channel and Gain Selection Bits"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ADLAR" edc:nzwidth="0x1" edc:desc="Left Adjust Result"/>
              <edc:SFRFieldDef edc:cname="REFS" edc:nzwidth="0x2" edc:desc="Reference Selection Bits">
                <edc:SFRFieldSemantic edc:cname="AREF_INTERNAL_VREF_TURNED_OFF" edc:desc="AREF, Internal Vref turned off" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="AVCC_WITH_EXTERNAL_CAPACITOR_AT_AREF_PIN" edc:desc="AVCC with external capacitor at AREF pin" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="INTERNAL_2_56V_VOLTAGE_REFERENCE_WITH_EXTERNAL_CAPACITOR_AT_AREF_PIN" edc:desc="Internal 2.56V Voltage Reference with external capacitor at AREF pin" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x7D"/>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="DIDR0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0x7E">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="ADC0D" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC1D" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC2D" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC3D" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC4D" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC5D" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC6D" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC7D" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="ADC" edc:cname="DIDR1" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:impl="0x3F" edc:_addr="0x7F">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC">
              <edc:SFRFieldDef edc:cname="ADC8D" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC9D" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ADC10D" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="AMP0ND" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="AMP0PD" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="ACMP0D" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TCCR1A" edc:nzwidth="0x8" edc:access="nnnn--nn" edc:impl="0xF3" edc:_addr="0x80">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="WGM1" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="COM1B" edc:nzwidth="0x2" edc:desc="Compare Output Mode 1B, bits"/>
              <edc:SFRFieldDef edc:cname="COM1A" edc:nzwidth="0x2" edc:desc="Compare Output Mode 1A, bits"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TCCR1B" edc:nzwidth="0x8" edc:access="nn-nnnnn" edc:impl="0xDF" edc:_addr="0x81">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="CS1" edc:nzwidth="0x3" edc:desc="Prescaler source of Timer/Counter 1">
                <edc:SFRFieldSemantic edc:cname="NO_CLOCK_SOURCE_STOPPED" edc:desc="No Clock Source (Stopped)" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_NO_PRESCALING" edc:desc="Running, No Prescaling" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_8" edc:desc="Running, CLK/8" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_64" edc:desc="Running, CLK/64" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_256" edc:desc="Running, CLK/256" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_CLK_1024" edc:desc="Running, CLK/1024" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_EXTCLK_TN_FALLING_EDGE" edc:desc="Running, ExtClk Tn Falling Edge" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="RUNNING_EXTCLK_TN_RISING_EDGE" edc:desc="Running, ExtClk Tn Rising Edge" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="WGM1" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="ICES1" edc:nzwidth="0x1" edc:desc="Input Capture 1 Edge Select"/>
              <edc:SFRFieldDef edc:cname="ICNC1" edc:nzwidth="0x1" edc:desc="Input Capture 1 Noise Canceler"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TCCR1C" edc:nzwidth="0x8" edc:access="nn------" edc:impl="0xC0" edc:_addr="0x82">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:AdjustPoint edc:offset="0x6"/>
              <edc:SFRFieldDef edc:cname="FOC1B" edc:nzwidth="0x1"/>
              <edc:SFRFieldDef edc:cname="FOC1A" edc:nzwidth="0x1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x83"/>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="TCNT1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x84">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="TCNT1" edc:nzwidth="0x10" edc:desc="Timer/Counter1"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="ICR1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x86">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="ICR1" edc:nzwidth="0x10" edc:desc="Timer/Counter1 Input Capture"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="OCR1A" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x88">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="OCR1A" edc:nzwidth="0x10" edc:desc="Timer/Counter1 Output Compare A"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="OCR1B" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0x8A">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
              <edc:SFRFieldDef edc:cname="OCR1B" edc:nzwidth="0x10" edc:desc="Timer/Counter1 Output Compare B"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x8C"/>
        <edc:SFRDef ltx:memberofperipheral="PSC0" edc:cname="PIFR0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xA0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC0">
              <edc:SFRFieldDef edc:cname="PEOP0" edc:nzwidth="0x1" edc:desc="End of PSC0 Interrupt"/>
              <edc:SFRFieldDef edc:cname="PRN0" edc:nzwidth="0x2" edc:desc="Ramp Number"/>
              <edc:SFRFieldDef edc:cname="PEV0A" edc:nzwidth="0x1" edc:desc="External Event A Interrupt"/>
              <edc:SFRFieldDef edc:cname="PEV0B" edc:nzwidth="0x1" edc:desc="External Event B Interrupt"/>
              <edc:SFRFieldDef edc:cname="PSEI0" edc:nzwidth="0x1" edc:desc="PSC 0 Synchro Error Interrupt"/>
              <edc:SFRFieldDef edc:cname="POAC0A" edc:nzwidth="0x1" edc:desc="PSC 0 Output A Activity"/>
              <edc:SFRFieldDef edc:cname="POAC0B" edc:nzwidth="0x1" edc:desc="PSC 0 Output A Activity"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC0" edc:cname="PIM0" edc:nzwidth="0x8" edc:access="--nnn--n" edc:impl="0x39" edc:_addr="0xA1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC0">
              <edc:SFRFieldDef edc:cname="PEOPE0" edc:nzwidth="0x1" edc:desc="End of Cycle Interrupt Enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PEVE0A" edc:nzwidth="0x1" edc:desc="External Event A Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="PEVE0B" edc:nzwidth="0x1" edc:desc="External Event B Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="PSEIE0" edc:nzwidth="0x1" edc:desc="PSC 0 Synchro Error Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC1" edc:cname="PIFR1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xA2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC1">
              <edc:SFRFieldDef edc:cname="PEOP1" edc:nzwidth="0x1" edc:desc="End of PSC1 Interrupt"/>
              <edc:SFRFieldDef edc:cname="PRN1" edc:nzwidth="0x2" edc:desc="Ramp Number"/>
              <edc:SFRFieldDef edc:cname="PEV1A" edc:nzwidth="0x1" edc:desc="External Event A Interrupt"/>
              <edc:SFRFieldDef edc:cname="PEV1B" edc:nzwidth="0x1" edc:desc="External Event B Interrupt"/>
              <edc:SFRFieldDef edc:cname="PSEI1" edc:nzwidth="0x1" edc:desc="PSC 1 Synchro Error Interrupt"/>
              <edc:SFRFieldDef edc:cname="POAC1A" edc:nzwidth="0x1" edc:desc="PSC 1 Output A Activity"/>
              <edc:SFRFieldDef edc:cname="POAC1B" edc:nzwidth="0x1" edc:desc="PSC 1 Output B Activity"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC1" edc:cname="PIM1" edc:nzwidth="0x8" edc:access="--nnn--n" edc:impl="0x39" edc:_addr="0xA3">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC1">
              <edc:SFRFieldDef edc:cname="PEOPE1" edc:nzwidth="0x1" edc:desc="End of Cycle Interrupt Enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PEVE1A" edc:nzwidth="0x1" edc:desc="External Event A Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="PEVE1B" edc:nzwidth="0x1" edc:desc="External Event B Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="PSEIE1" edc:nzwidth="0x1" edc:desc="PSC 1 Synchro Error Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC2" edc:cname="PIFR2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xA4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC2">
              <edc:SFRFieldDef edc:cname="PEOP2" edc:nzwidth="0x1" edc:desc="End of PSC2 Interrupt"/>
              <edc:SFRFieldDef edc:cname="PRN2" edc:nzwidth="0x2" edc:desc="Ramp Number"/>
              <edc:SFRFieldDef edc:cname="PEV2A" edc:nzwidth="0x1" edc:desc="External Event A Interrupt"/>
              <edc:SFRFieldDef edc:cname="PEV2B" edc:nzwidth="0x1" edc:desc="External Event B Interrupt"/>
              <edc:SFRFieldDef edc:cname="PSEI2" edc:nzwidth="0x1" edc:desc="PSC 2 Synchro Error Interrupt"/>
              <edc:SFRFieldDef edc:cname="POAC2A" edc:nzwidth="0x1" edc:desc="PSC 2 Output A Activity"/>
              <edc:SFRFieldDef edc:cname="POAC2B" edc:nzwidth="0x1" edc:desc="PSC 2 Output A Activity"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC2" edc:cname="PIM2" edc:nzwidth="0x8" edc:access="--nnn--n" edc:impl="0x39" edc:_addr="0xA5">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC2">
              <edc:SFRFieldDef edc:cname="PEOPE2" edc:nzwidth="0x1" edc:desc="End of Cycle Interrupt Enable"/>
              <edc:AdjustPoint edc:offset="0x2"/>
              <edc:SFRFieldDef edc:cname="PEVE2A" edc:nzwidth="0x1" edc:desc="External Event A Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="PEVE2B" edc:nzwidth="0x1" edc:desc="External Event B Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="PSEIE2" edc:nzwidth="0x1" edc:desc="PSC 2 Synchro Error Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xA6"/>
        <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="DACON" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:impl="0xF7" edc:_addr="0xAA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
              <edc:SFRFieldDef edc:cname="DAEN" edc:nzwidth="0x1" edc:desc="DAC Enable Bit"/>
              <edc:SFRFieldDef edc:cname="DAOE" edc:nzwidth="0x1" edc:desc="DAC Output Enable"/>
              <edc:SFRFieldDef edc:cname="DALA" edc:nzwidth="0x1" edc:desc="DAC Left Adjust"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="DATS" edc:nzwidth="0x3" edc:desc="DAC Trigger Selection Bits">
                <edc:SFRFieldSemantic edc:cname="ANALOG_COMPARATOR_0" edc:desc="Analog Comparator 0" edc:when="(field &amp; 0x7) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="ANALOG_COMPARATOR_1" edc:desc="Analog Comparator 1" edc:when="(field &amp; 0x7) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="EXTERNAL_INTERRUPT_REQUEST_0" edc:desc="External Interrupt Request 0" edc:when="(field &amp; 0x7) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="TIMER_COUNTER0_COMPARE_MATCH_A" edc:desc="Timer/Counter0 Compare Match A" edc:when="(field &amp; 0x7) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="TIMER_COUNTER0_OVERFLOW" edc:desc="Timer/Counter0 Overflow" edc:when="(field &amp; 0x7) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="TIMER_COUNTER1_COMPARE_MATCH_B" edc:desc="Timer/Counter1 Compare Match B" edc:when="(field &amp; 0x7) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="TIMER_COUNTER1_OVERFLOW" edc:desc="Timer/Counter1 Overflow" edc:when="(field &amp; 0x7) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="TIMER_COUNTER1_CAPTURE_EVENT" edc:desc="Timer/Counter1 Capture Event" edc:when="(field &amp; 0x7) == 0x07"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="DAATE" edc:nzwidth="0x1" edc:desc="DAC Auto Trigger Enable Bit"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="DAC" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xAB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
              <edc:SFRFieldDef edc:cname="DAC" edc:nzwidth="0x10" edc:desc="DAC Data Register Bits"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="AC0CON" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:impl="0xF7" edc:_addr="0xAD">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
              <edc:SFRFieldDef edc:cname="AC0M" edc:nzwidth="0x3" edc:desc="Analog Comparator 0 Multiplexer Register"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="AC0IS" edc:nzwidth="0x2" edc:desc="Analog Comparator 0  Interrupt Select Bit"/>
              <edc:SFRFieldDef edc:cname="AC0IE" edc:nzwidth="0x1" edc:desc="Analog Comparator 0 Interrupt Enable Bit"/>
              <edc:SFRFieldDef edc:cname="AC0EN" edc:nzwidth="0x1" edc:desc="Analog Comparator 0 Enable Bit"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="AC1CON" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xAE">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
              <edc:SFRFieldDef edc:cname="AC1M" edc:nzwidth="0x3" edc:desc="Analog Comparator 1 Multiplexer Register"/>
              <edc:SFRFieldDef edc:cname="AC1ICE" edc:nzwidth="0x1" edc:desc="Analog Comparator 1 Interrupt Capture Enable Bit"/>
              <edc:SFRFieldDef edc:cname="AC1IS" edc:nzwidth="0x2" edc:desc="Analog Comparator 1  Interrupt Select Bit">
                <edc:SFRFieldSemantic edc:cname="INTERRUPT_ON_TOGGLE" edc:desc="Interrupt on Toggle" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="INTERRUPT_ON_FALLING_EDGE" edc:desc="Interrupt on Falling Edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="INTERRUPT_ON_RISING_EDGE" edc:desc="Interrupt on Rising Edge" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="AC1IE" edc:nzwidth="0x1" edc:desc="Analog Comparator 1 Interrupt Enable Bit"/>
              <edc:SFRFieldDef edc:cname="AC1EN" edc:nzwidth="0x1" edc:desc="Analog Comparator 1 Enable Bit"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="AC2CON" edc:nzwidth="0x8" edc:access="nnnn-nnn" edc:impl="0xF7" edc:_addr="0xAF">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
              <edc:SFRFieldDef edc:cname="AC2M" edc:nzwidth="0x3" edc:desc="Analog Comparator 2 Multiplexer Register"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="AC2IS" edc:nzwidth="0x2" edc:desc="Analog Comparator 2  Interrupt Select Bit">
                <edc:SFRFieldSemantic edc:cname="INTERRUPT_ON_TOGGLE" edc:desc="Interrupt on Toggle" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="INTERRUPT_ON_FALLING_EDGE" edc:desc="Interrupt on Falling Edge" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="INTERRUPT_ON_RISING_EDGE" edc:desc="Interrupt on Rising Edge" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="AC2IE" edc:nzwidth="0x1" edc:desc="Analog Comparator 2 Interrupt Enable Bit"/>
              <edc:SFRFieldDef edc:cname="AC2EN" edc:nzwidth="0x1" edc:desc="Analog Comparator 2 Enable Bit"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x10" edc:_addr="0xB0"/>
        <edc:SFRDef ltx:memberofperipheral="USART" edc:cname="UCSRA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xC0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART">
              <edc:SFRFieldDef edc:cname="MPCM" edc:nzwidth="0x1" edc:desc="Multi-processor Communication Mode"/>
              <edc:SFRFieldDef edc:cname="U2X" edc:nzwidth="0x1" edc:desc="Double USART Transmission Bit"/>
              <edc:SFRFieldDef edc:cname="UPE" edc:nzwidth="0x1" edc:desc="USART Parity Error"/>
              <edc:SFRFieldDef edc:cname="DOR" edc:nzwidth="0x1" edc:desc="Data Overrun"/>
              <edc:SFRFieldDef edc:cname="FE" edc:nzwidth="0x1" edc:desc="Framing Error"/>
              <edc:SFRFieldDef edc:cname="UDRE" edc:nzwidth="0x1" edc:desc="USART Data Register Empty"/>
              <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="USART Transmit Complete"/>
              <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="USART Receive Complete"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART" edc:cname="UCSRB" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xC1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART">
              <edc:SFRFieldDef edc:cname="TXB8" edc:nzwidth="0x1" edc:desc="Transmit Data Bit 8"/>
              <edc:SFRFieldDef edc:cname="RXB8" edc:nzwidth="0x1" edc:desc="Receive Data Bit 8"/>
              <edc:SFRFieldDef edc:cname="UCSZ2" edc:nzwidth="0x1" edc:desc="Character Size"/>
              <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
              <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
              <edc:SFRFieldDef edc:cname="UDRIE" edc:nzwidth="0x1" edc:desc="USART Data Register Empty Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="TXCIE" edc:nzwidth="0x1" edc:desc="TX Complete Interrupt Enable"/>
              <edc:SFRFieldDef edc:cname="RXCIE" edc:nzwidth="0x1" edc:desc="RX Complete Interrupt Enable"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART" edc:cname="UCSRC" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:impl="0x7F" edc:_addr="0xC2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART">
              <edc:SFRFieldDef edc:cname="UCPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity"/>
              <edc:SFRFieldDef edc:cname="UCSZ" edc:nzwidth="0x2" edc:desc="Character Size Bits"/>
              <edc:SFRFieldDef edc:cname="USBS" edc:nzwidth="0x1" edc:desc="Stop Bit Select">
                <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="1-bit" edc:when="(field &amp; 0x1) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="2-bit" edc:when="(field &amp; 0x1) == 0x01"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="UPM" edc:nzwidth="0x2" edc:desc="Parity Mode Bits">
                <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0x3) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="ENABLED_EVEN_PARITY" edc:desc="Enabled, Even Parity" edc:when="(field &amp; 0x3) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="ENABLED_ODD_PARITY" edc:desc="Enabled, Odd Parity" edc:when="(field &amp; 0x3) == 0x03"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="UMSEL0" edc:nzwidth="0x1" edc:desc="USART Mode Select"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0xC3"/>
        <edc:SFRDef ltx:memberofperipheral="USART" edc:cname="UBRR" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:impl="0xFFF" edc:_addr="0xC4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART">
              <edc:SFRFieldDef edc:cname="UBRR" edc:nzwidth="0xC" edc:desc="USART Baud Rate Register Bits"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="USART" edc:cname="UDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xC6">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="USART">
              <edc:SFRFieldDef edc:cname="UDR" edc:nzwidth="0x8" edc:desc="USART I/O Data"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0xC7"/>
        <edc:SFRDef ltx:memberofperipheral="EUSART" edc:cname="EUCSRA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xC8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EUSART">
              <edc:SFRFieldDef edc:cname="URxS" edc:nzwidth="0x4" edc:desc="EUSART Control and Status Register A Bits">
                <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5-bit" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6-bit" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7-bit" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8-bit" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9-bit" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13-bit" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14-bit" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15-bit" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16-bit" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="16_OR_17" edc:desc="16 or 17" edc:when="(field &amp; 0xF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="17-bit" edc:when="(field &amp; 0xF) == 0x0F"/>
              </edc:SFRFieldDef>
              <edc:SFRFieldDef edc:cname="UTxS" edc:nzwidth="0x4" edc:desc="EUSART Control and Status Register A Bits">
                <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5-bit" edc:when="(field &amp; 0xF) == 0x00"/>
                <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6-bit" edc:when="(field &amp; 0xF) == 0x01"/>
                <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7-bit" edc:when="(field &amp; 0xF) == 0x02"/>
                <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8-bit" edc:when="(field &amp; 0xF) == 0x03"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0xF) == 0x04"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0xF) == 0x05"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0xF) == 0x06"/>
                <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9-bit" edc:when="(field &amp; 0xF) == 0x07"/>
                <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="13-bit" edc:when="(field &amp; 0xF) == 0x08"/>
                <edc:SFRFieldSemantic edc:cname="14_BIT" edc:desc="14-bit" edc:when="(field &amp; 0xF) == 0x09"/>
                <edc:SFRFieldSemantic edc:cname="15_BIT" edc:desc="15-bit" edc:when="(field &amp; 0xF) == 0x0A"/>
                <edc:SFRFieldSemantic edc:cname="16_BIT" edc:desc="16-bit" edc:when="(field &amp; 0xF) == 0x0B"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0xF) == 0x0C"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0xF) == 0x0D"/>
                <edc:SFRFieldSemantic edc:cname="RESERVED" edc:desc="Reserved" edc:when="(field &amp; 0xF) == 0x0E"/>
                <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="17-bit" edc:when="(field &amp; 0xF) == 0x0F"/>
              </edc:SFRFieldDef>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EUSART" edc:cname="EUCSRB" edc:nzwidth="0x8" edc:access="---nn-nn" edc:impl="0x1B" edc:_addr="0xC9">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EUSART">
              <edc:SFRFieldDef edc:cname="BODR" edc:nzwidth="0x1" edc:desc="Order Bit"/>
              <edc:SFRFieldDef edc:cname="EMCH" edc:nzwidth="0x1" edc:desc="Manchester Mode Bit"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="EUSBS" edc:nzwidth="0x1" edc:desc="EUSBS Enable Bit"/>
              <edc:SFRFieldDef edc:cname="EUSART" edc:nzwidth="0x1" edc:desc="EUSART Enable Bit"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EUSART" edc:cname="EUCSRC" edc:nzwidth="0x8" edc:access="----nnnn" edc:impl="0xF" edc:_addr="0xCA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EUSART">
              <edc:SFRFieldDef edc:cname="STP" edc:nzwidth="0x2" edc:desc="Stop Bits"/>
              <edc:SFRFieldDef edc:cname="F1617" edc:nzwidth="0x1" edc:desc="F1617 Bit"/>
              <edc:SFRFieldDef edc:cname="FEM" edc:nzwidth="0x1" edc:desc="Frame Error Manchester Bit"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0xCB"/>
        <edc:SFRDef ltx:memberofperipheral="EUSART" edc:cname="MUBRR" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xCC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EUSART">
              <edc:SFRFieldDef edc:cname="MUBRR" edc:nzwidth="0x10" edc:desc="Manchester Receiver Baud Rate Register Bits"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="EUSART" edc:cname="EUDR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xCE">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EUSART">
              <edc:SFRFieldDef edc:cname="EUDR" edc:nzwidth="0x8" edc:desc="EUSART Extended data bits"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0xCF"/>
        <edc:SFRDef ltx:memberofperipheral="PSC0" edc:cname="PSOC0" edc:nzwidth="0x8" edc:access="--nn-n-n" edc:impl="0x35" edc:_addr="0xD0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC0">
              <edc:SFRFieldDef edc:cname="POEN0A" edc:nzwidth="0x1" edc:desc="PSCOUT00 Output Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="POEN0B" edc:nzwidth="0x1" edc:desc="PSCOUT01 Output Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="PSYNC0" edc:nzwidth="0x2" edc:desc="Synchronization Out for ADC Selection"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0xD1"/>
        <edc:SFRDef ltx:memberofperipheral="PSC0" edc:cname="OCR0SA" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:impl="0xFFF" edc:_addr="0xD2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC0">
              <edc:SFRFieldDef edc:cname="OCR0SA" edc:nzwidth="0xC" edc:desc="Output Compare SA"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC0" edc:cname="OCR0RA" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:impl="0xFFF" edc:_addr="0xD4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC0">
              <edc:SFRFieldDef edc:cname="OCR0RA" edc:nzwidth="0xC" edc:desc="Output Compare RA"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC0" edc:cname="OCR0SB" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:impl="0xFFF" edc:_addr="0xD6">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC0">
              <edc:SFRFieldDef edc:cname="OCR0SB" edc:nzwidth="0xC" edc:desc="Output Compare SB"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC0" edc:cname="OCR0RB" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xD8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC0">
              <edc:SFRFieldDef edc:cname="OCR0RB" edc:nzwidth="0x10" edc:desc="Output Compare RB"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC0" edc:cname="PCNF0" edc:nzwidth="0x8" edc:access="nnnnnnn-" edc:impl="0xFE" edc:_addr="0xDA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC0">
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="PCLKSEL0" edc:nzwidth="0x1" edc:desc="PSC 0 Input Clock Select"/>
              <edc:SFRFieldDef edc:cname="POP0" edc:nzwidth="0x1" edc:desc="PSC 0 Output Polarity"/>
              <edc:SFRFieldDef edc:cname="PMODE0" edc:nzwidth="0x2" edc:desc="PSC 0 Mode"/>
              <edc:SFRFieldDef edc:cname="PLOCK0" edc:nzwidth="0x1" edc:desc="PSC 0 Lock"/>
              <edc:SFRFieldDef edc:cname="PALOCK0" edc:nzwidth="0x1" edc:desc="PSC 0 Autolock"/>
              <edc:SFRFieldDef edc:cname="PFIFTY0" edc:nzwidth="0x1" edc:desc="PSC 0 Fifty"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC0" edc:cname="PCTL0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xDB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC0">
              <edc:SFRFieldDef edc:cname="PRUN0" edc:nzwidth="0x1" edc:desc="PSC 0 Run"/>
              <edc:SFRFieldDef edc:cname="PCCYC0" edc:nzwidth="0x1" edc:desc="PSC0 Complete Cycle"/>
              <edc:SFRFieldDef edc:cname="PARUN0" edc:nzwidth="0x1" edc:desc="PSC0 Auto Run"/>
              <edc:SFRFieldDef edc:cname="PAOC0A" edc:nzwidth="0x1" edc:desc="PSC 0 Asynchronous Output Control A"/>
              <edc:SFRFieldDef edc:cname="PAOC0B" edc:nzwidth="0x1" edc:desc="PSC 0 Asynchronous Output Control B"/>
              <edc:SFRFieldDef edc:cname="PBFM0" edc:nzwidth="0x1" edc:desc="PSC 0 Balance Flank Width Modulation"/>
              <edc:SFRFieldDef edc:cname="PPRE0" edc:nzwidth="0x2" edc:desc="PSC 0 Prescaler Selects"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC0" edc:cname="PFRC0A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xDC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC0">
              <edc:SFRFieldDef edc:cname="PRFM0A" edc:nzwidth="0x4" edc:desc="PSC 0 Retrigger and Fault Mode for Part A"/>
              <edc:SFRFieldDef edc:cname="PFLTE0A" edc:nzwidth="0x1" edc:desc="PSC 0 Filter Enable on Input Part A"/>
              <edc:SFRFieldDef edc:cname="PELEV0A" edc:nzwidth="0x1" edc:desc="PSC 0 Edge Level Selector on Input Part A"/>
              <edc:SFRFieldDef edc:cname="PISEL0A" edc:nzwidth="0x1" edc:desc="PSC 0 Input Select for Part A"/>
              <edc:SFRFieldDef edc:cname="PCAE0A" edc:nzwidth="0x1" edc:desc="PSC 0 Capture Enable Input Part A"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC0" edc:cname="PFRC0B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xDD">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC0">
              <edc:SFRFieldDef edc:cname="PRFM0B" edc:nzwidth="0x4" edc:desc="PSC 0 Retrigger and Fault Mode for Part B"/>
              <edc:SFRFieldDef edc:cname="PFLTE0B" edc:nzwidth="0x1" edc:desc="PSC 0 Filter Enable on Input Part B"/>
              <edc:SFRFieldDef edc:cname="PELEV0B" edc:nzwidth="0x1" edc:desc="PSC 0 Edge Level Selector on Input Part B"/>
              <edc:SFRFieldDef edc:cname="PISEL0B" edc:nzwidth="0x1" edc:desc="PSC 0 Input Select for Part B"/>
              <edc:SFRFieldDef edc:cname="PCAE0B" edc:nzwidth="0x1" edc:desc="PSC 0 Capture Enable Input Part B"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC0" edc:cname="PICR0" edc:nzwidth="0x10" edc:access="n---nnnnnnnnnnnn" edc:impl="0x8FFF" edc:_addr="0xDE">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC0">
              <edc:SFRFieldDef edc:cname="PICR0" edc:nzwidth="0xC" edc:desc="PSC 0 Input Capture Bytes"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="PCST0" edc:nzwidth="0x1" edc:desc="PSC 0 Input Capture Software Trig"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC1" edc:cname="PSOC1" edc:nzwidth="0x8" edc:access="--nn-n-n" edc:impl="0x35" edc:_addr="0xE0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC1">
              <edc:SFRFieldDef edc:cname="POEN1A" edc:nzwidth="0x1" edc:desc="PSCOUT10 Output Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="POEN1B" edc:nzwidth="0x1" edc:desc="PSCOUT11 Output Enable"/>
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="PSYNC1_" edc:nzwidth="0x2" edc:desc="Synchronization Out for ADC Selection"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:AdjustPoint edc:offset="0x1" edc:_addr="0xE1"/>
        <edc:SFRDef ltx:memberofperipheral="PSC1" edc:cname="OCR1SA" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:impl="0xFFF" edc:_addr="0xE2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC1">
              <edc:SFRFieldDef edc:cname="OCR1SA" edc:nzwidth="0xC" edc:desc="Output Compare 1 SA"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC1" edc:cname="OCR1RA" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:impl="0xFFF" edc:_addr="0xE4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC1">
              <edc:SFRFieldDef edc:cname="OCR1RA" edc:nzwidth="0xC" edc:desc="Output Compare 1 RA"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC1" edc:cname="OCR1SB" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:impl="0xFFF" edc:_addr="0xE6">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC1">
              <edc:SFRFieldDef edc:cname="OCR1SB" edc:nzwidth="0xC" edc:desc="Output Compare 1 SB"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC1" edc:cname="OCR1RB" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xE8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC1">
              <edc:SFRFieldDef edc:cname="OCR1RB" edc:nzwidth="0x10" edc:desc="Output Compare 1 RB"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC1" edc:cname="PCNF1" edc:nzwidth="0x8" edc:access="nnnnnnn-" edc:impl="0xFE" edc:_addr="0xEA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC1">
              <edc:AdjustPoint edc:offset="0x1"/>
              <edc:SFRFieldDef edc:cname="PCLKSEL1" edc:nzwidth="0x1" edc:desc="PSC 1 Input Clock Select"/>
              <edc:SFRFieldDef edc:cname="POP1" edc:nzwidth="0x1" edc:desc="PSC 1 Output Polarity"/>
              <edc:SFRFieldDef edc:cname="PMODE1" edc:nzwidth="0x2" edc:desc="PSC 1 Mode"/>
              <edc:SFRFieldDef edc:cname="PLOCK1" edc:nzwidth="0x1" edc:desc="PSC 1 Lock"/>
              <edc:SFRFieldDef edc:cname="PALOCK1" edc:nzwidth="0x1" edc:desc="PSC 1 Autolock"/>
              <edc:SFRFieldDef edc:cname="PFIFTY1" edc:nzwidth="0x1" edc:desc="PSC 1 Fifty"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC1" edc:cname="PCTL1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xEB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC1">
              <edc:SFRFieldDef edc:cname="PRUN1" edc:nzwidth="0x1" edc:desc="PSC 1 Run"/>
              <edc:SFRFieldDef edc:cname="PCCYC1" edc:nzwidth="0x1" edc:desc="PSC1 Complete Cycle"/>
              <edc:SFRFieldDef edc:cname="PARUN1" edc:nzwidth="0x1" edc:desc="PSC1 Auto Run"/>
              <edc:SFRFieldDef edc:cname="PAOC1A" edc:nzwidth="0x1" edc:desc="PSC 1 Asynchronous Output Control A"/>
              <edc:SFRFieldDef edc:cname="PAOC1B" edc:nzwidth="0x1" edc:desc="PSC 1 Asynchronous Output Control B"/>
              <edc:SFRFieldDef edc:cname="PBFM1" edc:nzwidth="0x1" edc:desc="Balance Flank Width Modulation"/>
              <edc:SFRFieldDef edc:cname="PPRE1" edc:nzwidth="0x2" edc:desc="PSC 1 Prescaler Selects"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC1" edc:cname="PFRC1A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xEC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC1">
              <edc:SFRFieldDef edc:cname="PRFM1A" edc:nzwidth="0x4" edc:desc="PSC 1 Retrigger and Fault Mode for Part A"/>
              <edc:SFRFieldDef edc:cname="PFLTE1A" edc:nzwidth="0x1" edc:desc="PSC 1 Filter Enable on Input Part A"/>
              <edc:SFRFieldDef edc:cname="PELEV1A" edc:nzwidth="0x1" edc:desc="PSC 1 Edge Level Selector on Input Part A"/>
              <edc:SFRFieldDef edc:cname="PISEL1A" edc:nzwidth="0x1" edc:desc="PSC 1 Input Select for Part A"/>
              <edc:SFRFieldDef edc:cname="PCAE1A" edc:nzwidth="0x1" edc:desc="PSC 1 Capture Enable Input Part A"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC1" edc:cname="PFRC1B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xED">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC1">
              <edc:SFRFieldDef edc:cname="PRFM1B" edc:nzwidth="0x4" edc:desc="PSC 1 Retrigger and Fault Mode for Part B"/>
              <edc:SFRFieldDef edc:cname="PFLTE1B" edc:nzwidth="0x1" edc:desc="PSC 1 Filter Enable on Input Part B"/>
              <edc:SFRFieldDef edc:cname="PELEV1B" edc:nzwidth="0x1" edc:desc="PSC 1 Edge Level Selector on Input Part B"/>
              <edc:SFRFieldDef edc:cname="PISEL1B" edc:nzwidth="0x1" edc:desc="PSC 1 Input Select for Part B"/>
              <edc:SFRFieldDef edc:cname="PCAE1B" edc:nzwidth="0x1" edc:desc="PSC 1 Capture Enable Input Part B"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC1" edc:cname="PICR1" edc:nzwidth="0x10" edc:access="n---nnnnnnnnnnnn" edc:impl="0x8FFF" edc:_addr="0xEE">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC1">
              <edc:SFRFieldDef edc:cname="PICR1" edc:nzwidth="0xC" edc:desc="PSC 1 Input Capture Bytes"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="PCST1" edc:nzwidth="0x1" edc:desc="PSC 1 Input Capture Software Trig"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC2" edc:cname="PSOC2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xF0">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC2">
              <edc:SFRFieldDef edc:cname="POEN2A" edc:nzwidth="0x1" edc:desc="PSCOUT20 Output Enable"/>
              <edc:SFRFieldDef edc:cname="POEN2C" edc:nzwidth="0x1" edc:desc="PSCOUT22 Output Enable"/>
              <edc:SFRFieldDef edc:cname="POEN2B" edc:nzwidth="0x1" edc:desc="PSCOUT21 Output Enable"/>
              <edc:SFRFieldDef edc:cname="POEN2D" edc:nzwidth="0x1" edc:desc="PSCOUT23 Output Enable"/>
              <edc:SFRFieldDef edc:cname="PSYNC2_" edc:nzwidth="0x2" edc:desc="Synchronization Out for ADC Selection"/>
              <edc:SFRFieldDef edc:cname="POS2" edc:nzwidth="0x2" edc:desc="PSC 2 Output 23 Select"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC2" edc:cname="POM2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xF1">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC2">
              <edc:SFRFieldDef edc:cname="POMV2A" edc:nzwidth="0x4" edc:desc="Output Matrix Output A Ramps"/>
              <edc:SFRFieldDef edc:cname="POMV2B" edc:nzwidth="0x4" edc:desc="Output Matrix Output B Ramps"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC2" edc:cname="OCR2SA" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:impl="0xFFF" edc:_addr="0xF2">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC2">
              <edc:SFRFieldDef edc:cname="OCR2SA" edc:nzwidth="0xC" edc:desc="Output Compare SA"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC2" edc:cname="OCR2RA" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:impl="0xFFF" edc:_addr="0xF4">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC2">
              <edc:SFRFieldDef edc:cname="OCR2RA" edc:nzwidth="0xC" edc:desc="Output Compare RA"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC2" edc:cname="OCR2SB" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:impl="0xFFF" edc:_addr="0xF6">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC2">
              <edc:SFRFieldDef edc:cname="OCR2SB" edc:nzwidth="0xC" edc:desc="Output Compare SB"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC2" edc:cname="OCR2RB" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:_addr="0xF8">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC2">
              <edc:SFRFieldDef edc:cname="OCR2RB" edc:nzwidth="0x10" edc:desc="Output Compare RB"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC2" edc:cname="PCNF2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xFA">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC2">
              <edc:SFRFieldDef edc:cname="POME2" edc:nzwidth="0x1" edc:desc="PSC 2 Output Matrix Enable"/>
              <edc:SFRFieldDef edc:cname="PCLKSEL2" edc:nzwidth="0x1" edc:desc="PSC 2 Input Clock Select"/>
              <edc:SFRFieldDef edc:cname="POP2" edc:nzwidth="0x1" edc:desc="PSC 2 Output Polarity"/>
              <edc:SFRFieldDef edc:cname="PMODE2" edc:nzwidth="0x2" edc:desc="PSC 2 Mode"/>
              <edc:SFRFieldDef edc:cname="PLOCK2" edc:nzwidth="0x1" edc:desc="PSC 2 Lock"/>
              <edc:SFRFieldDef edc:cname="PALOCK2" edc:nzwidth="0x1" edc:desc="PSC 2 Autolock"/>
              <edc:SFRFieldDef edc:cname="PFIFTY2" edc:nzwidth="0x1" edc:desc="PSC 2 Fifty"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC2" edc:cname="PCTL2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xFB">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC2">
              <edc:SFRFieldDef edc:cname="PRUN2" edc:nzwidth="0x1" edc:desc="PSC 2 Run"/>
              <edc:SFRFieldDef edc:cname="PCCYC2" edc:nzwidth="0x1" edc:desc="PSC2 Complete Cycle"/>
              <edc:SFRFieldDef edc:cname="PARUN2" edc:nzwidth="0x1" edc:desc="PSC2 Auto Run"/>
              <edc:SFRFieldDef edc:cname="PAOC2A" edc:nzwidth="0x1" edc:desc="PSC 2 Asynchronous Output Control A"/>
              <edc:SFRFieldDef edc:cname="PAOC2B" edc:nzwidth="0x1" edc:desc="PSC 2 Asynchronous Output Control B"/>
              <edc:SFRFieldDef edc:cname="PBFM2" edc:nzwidth="0x1" edc:desc="Balance Flank Width Modulation"/>
              <edc:SFRFieldDef edc:cname="PPRE2" edc:nzwidth="0x2" edc:desc="PSC 2 Prescaler Selects"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC2" edc:cname="PFRC2A" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xFC">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC2">
              <edc:SFRFieldDef edc:cname="PRFM2A" edc:nzwidth="0x4" edc:desc="PSC 2 Retrigger and Fault Mode for Part A"/>
              <edc:SFRFieldDef edc:cname="PFLTE2A" edc:nzwidth="0x1" edc:desc="PSC 2 Filter Enable on Input Part A"/>
              <edc:SFRFieldDef edc:cname="PELEV2A" edc:nzwidth="0x1" edc:desc="PSC 2 Edge Level Selector on Input Part A"/>
              <edc:SFRFieldDef edc:cname="PISEL2A" edc:nzwidth="0x1" edc:desc="PSC 2 Input Select for Part A"/>
              <edc:SFRFieldDef edc:cname="PCAE2A" edc:nzwidth="0x1" edc:desc="PSC 2 Capture Enable Input Part A"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC2" edc:cname="PFRC2B" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:_addr="0xFD">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC2">
              <edc:SFRFieldDef edc:cname="PRFM2B" edc:nzwidth="0x4" edc:desc="PSC 2 Retrigger and Fault Mode for Part B"/>
              <edc:SFRFieldDef edc:cname="PFLTE2B" edc:nzwidth="0x1" edc:desc="PSC 2 Filter Enable on Input Part B"/>
              <edc:SFRFieldDef edc:cname="PELEV2B" edc:nzwidth="0x1" edc:desc="PSC 2 Edge Level Selector on Input Part B"/>
              <edc:SFRFieldDef edc:cname="PISEL2B" edc:nzwidth="0x1" edc:desc="PSC 2 Input Select for Part B"/>
              <edc:SFRFieldDef edc:cname="PCAE2B" edc:nzwidth="0x1" edc:desc="PSC 2 Capture Enable Input Part B"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
        <edc:SFRDef ltx:memberofperipheral="PSC2" edc:cname="PICR2" edc:nzwidth="0x10" edc:access="n---nnnnnnnnnnnn" edc:impl="0x8FFF" edc:_addr="0xFE">
          <edc:SFRModeList>
            <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PSC2">
              <edc:SFRFieldDef edc:cname="PICR2" edc:nzwidth="0xC" edc:desc="PSC 2 Input Capture Bytes"/>
              <edc:AdjustPoint edc:offset="0x3"/>
              <edc:SFRFieldDef edc:cname="PCST2" edc:nzwidth="0x1" edc:desc="PSC 2 Input Capture Software Trig"/>
            </edc:SFRMode>
          </edc:SFRModeList>
        </edc:SFRDef>
      </edc:SFRDataSector>
      <edc:GPRDataSector edc:regionid="IRAM" edc:beginaddr="0x100" edc:endaddr="0x300"/>
    </edc:RegardlessOfMode>
  </edc:DataSpace>
  <edc:DataFlashSpace edc:endaddr="0x200" edc:magicoffset="0x810000"/>
  <edc:SignaturesSpace edc:magicoffset="0x840000">
    <edc:DeviceIDSector edc:regionid="SIGNATURES" edc:beginaddr="0x0" edc:endaddr="0x3" edc:value="0x1E9383" edc:mask="0xffffff" edc:rw="r"/>
  </edc:SignaturesSpace>
  <edc:FusesSpace edc:magicoffset="0x820000">
    <edc:ConfigFuseSector edc:regionid="FUSES" edc:beginaddr="0x0" edc:endaddr="0x3" edc:magicoffset="0x820000" edc:rw="rw">
      <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="LOW" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0x62" edc:access="nnnnnnnn" edc:_addr="0x0">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
            <edc:DCRFieldDef edc:cname="SUT_CKSEL" edc:nzwidth="0x6" edc:desc="Select Clock Source">
              <edc:DCRFieldSemantic edc:cname="EXTCLK_6CK_14CK_0MS" edc:desc="Ext. Clock; Start-up time PWRDWN/RESET: 6 CK/14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="EXTCLK_6CK_14CK_4MS1" edc:desc="Ext. Clock; Start-up time PWRDWN/RESET: 6 CK/14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x10"/>
              <edc:DCRFieldSemantic edc:cname="EXTCLK_6CK_14CK_65MS" edc:desc="Ext. Clock; Start-up time PWRDWN/RESET: 6 CK/14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x20"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_8MHZ_6CK_14CK_0MS" edc:desc="Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_8MHZ_6CK_14CK_4MS1" edc:desc="Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x12"/>
              <edc:DCRFieldSemantic edc:cname="INTRCOSC_8MHZ_6CK_14CK_65MS" edc:desc="Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x22"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ4_0MHZ9_258CK_14CK_4MS1" edc:desc="Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x08"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ4_0MHZ9_258CK_14CK_65MS" edc:desc="Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x18"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ4_0MHZ9_1KCK_14CK_0MS" edc:desc="Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x28"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ4_0MHZ9_1KCK_14CK_4MS1" edc:desc="Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x38"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ4_0MHZ9_1KCK_14CK_65MS" edc:desc="Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x09"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ4_0MHZ9_16KCK_14CK_0MS" edc:desc="Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x19"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ4_0MHZ9_16KCK_14CK_4MS1" edc:desc="Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x29"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ4_0MHZ9_16KCK_14CK_65MS" edc:desc="Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x39"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ9_3MHZ_258CK_14CK_4MS1" edc:desc="Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x0A"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ9_3MHZ_258CK_14CK_65MS" edc:desc="Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x1A"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ9_3MHZ_1KCK_14CK_0MS" edc:desc="Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x2A"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ9_3MHZ_1KCK_14CK_4MS1" edc:desc="Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x3A"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ9_3MHZ_1KCK_14CK_65MS" edc:desc="Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x0B"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ9_3MHZ_16KCK_14CK_0MS" edc:desc="Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x1B"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ9_3MHZ_16KCK_14CK_4MS1" edc:desc="Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x2B"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_0MHZ9_3MHZ_16KCK_14CK_65MS" edc:desc="Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x3B"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_3MHZ_8MHZ_258CK_14CK_4MS1" edc:desc="Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x0C"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_3MHZ_8MHZ_258CK_14CK_65MS" edc:desc="Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x1C"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_3MHZ_8MHZ_1KCK_14CK_0MS" edc:desc="Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x2C"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_3MHZ_8MHZ_1KCK_14CK_4MS1" edc:desc="Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x3C"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_3MHZ_8MHZ_1KCK_14CK_65MS" edc:desc="Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x0D"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_3MHZ_8MHZ_16KCK_14CK_0MS" edc:desc="Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x1D"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_3MHZ_8MHZ_16KCK_14CK_4MS1" edc:desc="Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x2D"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_3MHZ_8MHZ_16KCK_14CK_65MS" edc:desc="Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x3D"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_8MHZ_XX_258CK_14CK_4MS1" edc:desc="Ext. Crystal Osc. 8.0-    MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x0E"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_8MHZ_XX_258CK_14CK_65MS" edc:desc="Ext. Crystal Osc. 8.0-    MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x1E"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_8MHZ_XX_1KCK_14CK_0MS" edc:desc="Ext. Crystal Osc. 8.0-    MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x2E"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_8MHZ_XX_1KCK_14CK_4MS1" edc:desc="Ext. Crystal Osc. 8.0-    MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x3E"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_8MHZ_XX_1KCK_14CK_65MS" edc:desc="Ext. Crystal Osc. 8.0-    MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x0F"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_8MHZ_XX_16KCK_14CK_0MS" edc:desc="Ext. Crystal Osc. 8.0-    MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x1F"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_8MHZ_XX_16KCK_14CK_4MS1" edc:desc="Ext. Crystal Osc. 8.0-    MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x2F"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_8MHZ_XX_16KCK_14CK_65MS" edc:desc="Ext. Crystal Osc. 8.0-    MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x3F"/>
              <edc:DCRFieldSemantic edc:cname="PLLCLK_16MHZ_1KCK_14CK_0MS" edc:desc="PLL clock 16 MHz; Rc. Start-up time PWRDWN/RESET: 1K CK/14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="PLLCLK_16MHZ_1KCK_14CK_4MS1" edc:desc="PLL clock 16 MHz; Start-up time PWRDWN/RESET: 1K CK/14 CK + 4.1 ms" edc:when="(field &amp; 0x3F) == 0x13"/>
              <edc:DCRFieldSemantic edc:cname="PLLCLK_16MHZ_1KCK_14CK_65MS" edc:desc="PLL clock 16 MHz; Start-up time PWRDWN/RESET: 1K CK/14 CK + 65 ms" edc:when="(field &amp; 0x3F) == 0x23"/>
              <edc:DCRFieldSemantic edc:cname="PLLCLK_16MHZ_16KCK_14CK_0MS" edc:desc="PLL clock 16 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x33"/>
              <edc:DCRFieldSemantic edc:cname="PLLCLK_PLLIN_EXTCLK_6KCK_14CK_0MS" edc:desc="PLL clock /4; PLL input: Ext. Clock; Start-up time PWRDWN/RESET: 6K CK/14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="PLLCLK_PLLIN_EXTCLK_6KCK_14CK_4MS" edc:desc="PLL clock /4; PLL input: Ext. Clock; Start-up time PWRDWN/RESET: 6K CK/14 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x11"/>
              <edc:DCRFieldSemantic edc:cname="PLLCLK_PLLIN_EXTCLK_6KCK_14CK_64MS" edc:desc="PLL clock /4; PLL input: Ext. Clock; Start-up time PWRDWN/RESET: 6K CK/14 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x21"/>
              <edc:DCRFieldSemantic edc:cname="PLLCLK_PLLIN_EXTXOSC_1KCK_14CK_0MS" edc:desc="PLL clock /4; PLL input: Ext. Crystal Osc.; Start-up time PWRDWN/RESET: 1K CK/14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x05"/>
              <edc:DCRFieldSemantic edc:cname="PLLCLK_PLLIN_EXTXOSC_1KCK_14CK_4MS" edc:desc="PLL clock /4; PLL input: Ext. Crystal Osc.; Start-up time PWRDWN/RESET: 1K CK/14 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x15"/>
              <edc:DCRFieldSemantic edc:cname="PLLCLK_PLLIN_EXTXOSC_16KCK_14CK_4MS" edc:desc="PLL clock /4; PLL input: Ext. Crystal Osc.; Start-up time PWRDWN/RESET: 16K CK/14 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x25"/>
              <edc:DCRFieldSemantic edc:cname="PLLCLK_PLLIN_EXTXOSC_16KCK_14CK_64MS" edc:desc="PLL clock /4; PLL input: Ext. Crystal Osc.; Start-up time PWRDWN/RESET: 16K CK/14 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x35"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_PLLIN_EXTXOSC_1KCK_14CK_0MS" edc:desc="Ext. Crystal Osc.; PLL input: Ext. Crystal Osc.; Start-up time PWRDWN/RESET: 1K CK/14 CK + 0 ms" edc:when="(field &amp; 0x3F) == 0x04"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_PLLIN_EXTXOSC_1KCK_14CK_4MS" edc:desc="Ext. Crystal Osc.; PLL input: Ext. Crystal Osc.; Start-up time PWRDWN/RESET: 1K CK/14 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x14"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_PLLIN_EXTXOSC_16KCK_14CK_4MS" edc:desc="Ext. Crystal Osc.; PLL input: Ext. Crystal Osc.; Start-up time PWRDWN/RESET: 16K CK/14 CK + 4 ms" edc:when="(field &amp; 0x3F) == 0x24"/>
              <edc:DCRFieldSemantic edc:cname="EXTXOSC_PLLIN_EXTXOSC_16KCK_14CK_64MS" edc:desc="Ext. Crystal Osc.; PLL input: Ext. Crystal Osc.; Start-up time PWRDWN/RESET: 16K CK/14 CK + 64 ms" edc:when="(field &amp; 0x3F) == 0x34"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="CKOUT" edc:nzwidth="0x1" edc:desc="Clock output on PORTB0">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="CKDIV8" edc:nzwidth="0x1" edc:desc="Divide clock by 8 internally">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="HIGH" edc:nzwidth="0x8" edc:impl="0xFF" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xDF" edc:access="nnnnnnnn" edc:_addr="0x1">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
            <edc:DCRFieldDef edc:cname="BODLEVEL" edc:nzwidth="0x3" edc:desc="Brown-out Detector Trigger Level">
              <edc:DCRFieldSemantic edc:cname="DISABLED" edc:desc="Brown-out detection disabled" edc:when="(field &amp; 0x7) == 0x07"/>
              <edc:DCRFieldSemantic edc:cname="4V5" edc:desc="Brown-out detection at VCC=4.5 V" edc:when="(field &amp; 0x7) == 0x06"/>
              <edc:DCRFieldSemantic edc:cname="2V7" edc:desc="Brown-out detection at VCC=2.7 V" edc:when="(field &amp; 0x7) == 0x05"/>
              <edc:DCRFieldSemantic edc:cname="4V3" edc:desc="Brown-out detection at VCC=4.3 V" edc:when="(field &amp; 0x7) == 0x04"/>
              <edc:DCRFieldSemantic edc:cname="4V4" edc:desc="Brown-out detection at VCC=4.4 V" edc:when="(field &amp; 0x7) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="4V2" edc:desc="Brown-out detection at VCC=4.2 V" edc:when="(field &amp; 0x7) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="2V8" edc:desc="Brown-out detection at VCC=2.8 V" edc:when="(field &amp; 0x7) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="2V6" edc:desc="Brown-out detection at VCC=2.6 V" edc:when="(field &amp; 0x7) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="EESAVE" edc:nzwidth="0x1" edc:desc="Preserve EEPROM through the Chip Erase cycle">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WDTON" edc:nzwidth="0x1" edc:desc="Watch-dog Timer always on">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="SPIEN" edc:nzwidth="0x1" edc:desc="Serial program downloading (SPI) enabled">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="DWEN" edc:nzwidth="0x1" edc:desc="Debug Wire enable">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="RSTDISBL" edc:nzwidth="0x1" edc:desc="Reset Disabled (Enable PC6 as i/o pin)">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSE" edc:cname="EXTENDED" edc:nzwidth="0x8" edc:impl="0xF7" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xF9" edc:access="nnnn-nnn" edc:_addr="0x2">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSE">
            <edc:DCRFieldDef edc:cname="BOOTRST" edc:nzwidth="0x1" edc:desc="Select Reset Vector">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BOOTSZ" edc:nzwidth="0x2" edc:desc="Select Boot Size">
              <edc:DCRFieldSemantic edc:cname="128W_0F80" edc:desc="Boot Flash size=128 words Boot address=$0F80" edc:when="(field &amp; 0x3) == 0x03"/>
              <edc:DCRFieldSemantic edc:cname="256W_0F00" edc:desc="Boot Flash size=256 words Boot address=$0F00" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="512W_0E00" edc:desc="Boot Flash size=512 words Boot address=$0E00" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="1024W_0C00" edc:desc="Boot Flash size=1024 words Boot address=$0C00" edc:when="(field &amp; 0x3) == 0x00"/>
            </edc:DCRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:DCRFieldDef edc:cname="PSCRV" edc:nzwidth="0x1" edc:desc="PSCOUT Reset Value">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="PSC0RB" edc:nzwidth="0x1" edc:desc="PSC0 Reset Behavior">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="PSC1RB" edc:nzwidth="0x1" edc:desc="PSC1 Reset Behavior">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="PSC2RB" edc:nzwidth="0x1" edc:desc="PSC2 Reset Behavior">
              <edc:DCRFieldSemantic edc:cname="SET" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CLEAR" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
    </edc:ConfigFuseSector>
  </edc:FusesSpace>
  <edc:LockbitsSpace edc:magicoffset="0x830000">
    <edc:ConfigFuseSector edc:regionid="LOCKBITS" edc:beginaddr="0x0" edc:endaddr="0x1" edc:magicoffset="0x830000" edc:rw="rw">
      <edc:DCRDef ltx:memberofperipheral="LOCKBIT" edc:cname="LOCKBIT" edc:nzwidth="0x8" edc:impl="0x3F" edc:unused="0x0" edc:useinchecksum="0xFF" edc:factorydefault="0xFF" edc:access="--nnnnnn" edc:_addr="0x0">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="LOCKBIT">
            <edc:DCRFieldDef edc:cname="LB" edc:nzwidth="0x2" edc:desc="Memory Lock">
              <edc:DCRFieldSemantic edc:cname="PROG_VER_DISABLED" edc:desc="Further programming and verification disabled" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="PROG_DISABLED" edc:desc="Further programming disabled" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="NO_LOCK" edc:desc="No memory lock features enabled" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BLB0" edc:nzwidth="0x2" edc:desc="Boot Loader Protection Mode">
              <edc:DCRFieldSemantic edc:cname="LPM_SPM_DISABLE" edc:desc="LPM and SPM prohibited in Application Section" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="LPM_DISABLE" edc:desc="LPM prohibited in Application Section" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="SPM_DISABLE" edc:desc="SPM prohibited in Application Section" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="NO_LOCK" edc:desc="No lock on SPM and LPM in Application Section" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BLB1" edc:nzwidth="0x2" edc:desc="Boot Loader Protection Mode">
              <edc:DCRFieldSemantic edc:cname="LPM_SPM_DISABLE" edc:desc="LPM and SPM prohibited in Boot Section" edc:when="(field &amp; 0x3) == 0x00"/>
              <edc:DCRFieldSemantic edc:cname="LPM_DISABLE" edc:desc="LPM prohibited in Boot Section" edc:when="(field &amp; 0x3) == 0x01"/>
              <edc:DCRFieldSemantic edc:cname="SPM_DISABLE" edc:desc="SPM prohibited in Boot Section" edc:when="(field &amp; 0x3) == 0x02"/>
              <edc:DCRFieldSemantic edc:cname="NO_LOCK" edc:desc="No lock on SPM and LPM in Boot Section" edc:when="(field &amp; 0x3) == 0x03"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
    </edc:ConfigFuseSector>
  </edc:LockbitsSpace>
</edc:PIC>
